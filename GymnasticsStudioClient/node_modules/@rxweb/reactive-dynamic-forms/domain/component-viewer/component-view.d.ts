import { ViewContainerRef, ComponentFactoryResolver, ComponentRef } from "@angular/core";
import { FormControlConfig } from '../../services/form-control-config';
import { DynamicFormBuildConfig } from "../../models/interface/dynamic-form-build-config";
export interface ComponentType<T> {
    new (...args: any[]): T;
}
export declare class ComponentView<T> {
    private formControlConfig;
    private dynamicFormBuildConfig;
    private component;
    private viewContainerRef;
    private componentFactoryResolver;
    private componentRef;
    constructor(_component: ComponentType<T>, _viewContainerRef: ViewContainerRef, _componentFactoryResolver: ComponentFactoryResolver, formControlConfig: FormControlConfig, dynamicFormBuildConfig: DynamicFormBuildConfig);
    create(): void;
    private setParams;
    overridePropAndSetValue(instance: any, propName: string, inputs: any): void;
    rootNode(): HTMLElement;
    getComponentRef(): ComponentRef<any>;
    destroy(): void;
}
