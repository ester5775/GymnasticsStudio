{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@rxweb/reactive-dynamic-forms/util/is-not-matched.ts","ng://@rxweb/reactive-dynamic-forms/services/value-change-notification.ts","ng://@rxweb/reactive-dynamic-forms/services/prop-descriptor.ts","ng://@rxweb/reactive-dynamic-forms/const/app.const.ts","ng://@rxweb/reactive-dynamic-forms/util/linq.ts","ng://@rxweb/reactive-dynamic-forms/statics/control-state.ts","ng://@rxweb/reactive-dynamic-forms/services/base-form-control-config.ts","ng://@rxweb/reactive-dynamic-forms/core/dynamicContainer.ts","ng://@rxweb/reactive-dynamic-forms/services/form-control-config.ts","ng://@rxweb/reactive-dynamic-forms/util/application-util.ts","ng://@rxweb/reactive-dynamic-forms/services/dynamic-form-builder.ts","ng://@rxweb/reactive-dynamic-forms/functions/get-instance.function.ts","ng://@rxweb/reactive-dynamic-forms/const/dynamic-element-design-tree.const.ts","ng://@rxweb/reactive-dynamic-forms/const/bootstrap-design-config.const.ts","ng://@rxweb/reactive-dynamic-forms/functions/object-prop-value.function.ts","ng://@rxweb/reactive-dynamic-forms/domain/dom/base-object-accessor.ts","ng://@rxweb/reactive-dynamic-forms/domain/component-viewer/component-view.ts","ng://@rxweb/reactive-dynamic-forms/domain/dom/element-props-accessor.ts","ng://@rxweb/reactive-dynamic-forms/domain/dom/element-event-processor.ts","ng://@rxweb/reactive-dynamic-forms/domain/dom/element-accessor.ts","ng://@rxweb/reactive-dynamic-forms/domain/dom/dom-manipulation.ts","ng://@rxweb/reactive-dynamic-forms/domain/dom/override-object-prop.ts","ng://@rxweb/reactive-dynamic-forms/form-designer/control-config-processor.ts","ng://@rxweb/reactive-dynamic-forms/directives/rxweb-bootstrap-form.directive.ts","ng://@rxweb/reactive-dynamic-forms/modules/dynamic-form-module.ts","ng://@rxweb/reactive-dynamic-forms/models/abstract-form-control-config.ts","ng://@rxweb/reactive-dynamic-forms/decorators/dynamic-component.decorator.ts","ng://@rxweb/reactive-dynamic-forms/decorators/override-prop.decorator.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","isNotMatched","jsonObject","compareObject","isModified","columnName","isArray","ValueChangeNotification","attributeChangeSubscriptions","onPropValueChanged","controlId","subscription","func","push","names","props","notifyValueChanged","name","oldValue","isProps","isNotEqual","filter","indexOf","forEach","subscribe","leftValue","rightValue","destroy","splice","PropDescriptor","_super","tslib_1.__extends","checkFilterFunction","descriptor","getPrototypeOf","isDefinedFilter","get","set","overrideProp","_this","keys","defineProp","propName","v","overrideProps","getDescriptor","overrideErrorsProp","formControl","errors","errorMessage","FILE","RANGE","CHECKBOX","BLANK","RADIO","INPUT","Linq","extractArguments","splitTexts","expressionArguments","split","trim","replace","dynamicConfigParser","expressionString","controlNames","match","splitString","RegExp","includes","splitText","ControlState","controls","NotificationState","notificationId","notifications","BaseFormControlConfig","configs","_actionResult","label","undefined","img","placeholder","source","hide","description","disabled","focus","readonly","class","prependText","setNotification","config","controlNotifications","complete","action","this_1","stringFunction","String","column","updateActionValue","refresh","actionName","x","setActionValue","ui","dynamicContainer","class_1","components","registerComponent","component","instance","registerOverrideProp","getOverrideProp","getComponent","FormControlConfig","fieldConfig","controlsConfig","overrides","overrideProperty","propInfo","_formControl","setTimeout","ControlConfig","ApplicationUtil","getRootFormGroup","control","parent","isObject","toString","RxDynamicFormBuilder","formGroup","fields","dynamicFormConfig","formConfiguration","entityObject","formFieldConfigs","modelConfig","RxFormGroup","type","createFormArray","splitName","name_1","addControl","modelInstance","getDynamicModelInstance","additionalConfig","getModelInstance","rootFormGroup","field","formArray","RxFormArray","controlConfigs","rows","row","createDynamicFormGroup","getRefObject","minimumRepeatCount","countLeft","addTwoProp","jObject","addItem","removeItem","index","removeAt","nestedFormGroup","formControlConfig","configModel","controlConfigModels","y","modelName","modelArguments","model","objectArguments","classInstance","ex","construct","getInstance","validators","asyncValidators","validatorBindings","validator","bind","asyncValidator","baseObject","RxFormControl","validations","validationConfig","RxwebValidators","commonAttributes","commonEvents","input","blur","item","attr","valuePropName","checked","events","prop","innerText","textPropName","checkBoxAndRadioDesign","for","ɵ0","configUiText","classAttribute","style","display","ɵ2","selected","DYNAMIC_ELEMENT_DESIGN_TREE","h1","h2","h3","h4","h5","h6","a","href","hr","strong","span","src","small","error","div","card","card-header","card-body","buttonGroup","ɵ1","prepend-left","prepend-right","prepend-both","textarea","cols","radio","checkbox","select","multiple","button","click","alert","viewMode","basic","horizontal","inline","advance","BOOSTRAP_CLASS_CONFIG","defaultControl","fileControl","readOnlyPlainText","rangeControl","checkBoxAndRadioControl","checkboxAndRadioControlInline","controlValid","controlInvalid","validMessage","invalidMessage","PREPEND_TEXT_CLASS_PATH","child","0","INPUT_GROUP","BOOTSTRAP_DESIGN_CONFIG","elementClassPath","1","2","elementClass","isPlainTextMode","invalidClass","listenerProps","inLineRadioAndCheckbox","root_div","3","objectPropValue","valueObject","splitTexts_1","tslib_1.__values","splitTexts_1_1","BaseObjectAccessor","dynamicNodeConfig","subscribeProps","controlConfig","getPropName","text","getValue","setPropSubscription","attributeName","parentPropName","startsWith","isSubscribeProp","ComponentView","_component","_viewContainerRef","_componentFactoryResolver","dynamicFormBuildConfig","viewContainerRef","componentFactoryResolver","componentFactory","resolveComponentFactory","componentRef","createComponent","parentInjector","setParams","inputs","propNames","getOwnPropertyNames","propNames_1","propNames_1_1","overridePropAndSetValue","rootNode","hostView","rootNodes","getComponentRef","ElementPropsAccessor","oldAdditionalClasses","oldClasses","bindAttribute","isSubscribe","setClass","setStyleProp","addOrRemoveAttribute","bindProp","setProperty","classes","getClassNames","additionalClasses","addOrRemoveClasses","addOrRemoveStyle","propertyName","renderer","element","isAdd","addClass","removeClass","styleName","setStyle","removeStyle","isBlank","setAttribute","removeAttribute","elementClasses","ElementEventProcessor","bindEvents","eventName","setFocus","setInput","setBlur","setClick","functionName","onclick","listen","markAsTouched","eventListeners","isPassed","hooks","preValue","patchValue","resetElementValue","setControlConfigValue","postValue","markAsDirty","conditionalValidator","ElementAccessor","checkedCheckbox","checkedRadio","createNodeElement","parentElement","createComponentView","createElement","appendChild","container","componentView","removeChildren","firstElementChild","getAttribute","targetElement","setValue","files","setCheckboxValue","values","_b","options","_c","option","elements","document","querySelectorAll","DomManipulation","parentNode","elementName","isComponentView","subscribers","elementIndex","actionListeners","nodeName","bindAdditionalClasses","parseObject","domConfig","process","subscribeValueChange","controlConfigProcessor","createChildrens","collections","overrideValueProp","eventCount","onClick","removeChild","OverrideObjectProp","overrideFormControlProp","ControlConfigProcessor","isBuild","_viewMode","build","getView","getName","uiBindings","controlConfigName","designForm","currentViewMode","viewRoot","viewChild","classPath","childrenControlConfig","getControlConfig","skipDefaultView","currentView","getClassPath","createDomManipulation","domManipulation_1","domManipulation_2","childrens","domManipulation","elementCount","childElementsClassConfig","collection","runForCollection","isCreateElement","childControlConfigs","childControlConfig","createChildNodes","isNextCollection","nextCollection","getCollection","childClasses","getAdditionalClasses","childrenClasses","concat","getControlName","controlName","isInline","prependControl","right","left","isCreate","tslib_1.__decorate","Input","RxDynamicFormDirective","elementRef","nativeElement","ngOnInit","ngOnDestroy","Directive","selector","ElementRef","Renderer2","ComponentFactoryResolver","ViewContainerRef","RxReactiveDynamicFormsModule","forRoot","ngModule","RxReactiveDynamicFormsModule_1","providers","NgModule","declarations","imports","CommonModule","exports","AbstractControlConfig","_controlConfig","_dynamicFormBuildConfig"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export function isNotMatched(jsonObject: { [key: string]: any }, compareObject: { [key: string]: any }) {\r\n    let isModified: boolean = false;\r\n    for (var columnName in compareObject) {\r\n            if (Array.isArray(jsonObject[columnName])) {\r\n                for (var i = 0; i < jsonObject[columnName].length; i++) {\r\n                    isModified = isNotMatched(jsonObject[columnName][i], compareObject[columnName][i])\r\n                }\r\n            } else if (typeof jsonObject[columnName] == \"object\")\r\n                isModified = isNotMatched(jsonObject[columnName], compareObject[columnName]);\r\n            else\r\n                isModified = !(jsonObject[columnName] == compareObject[columnName]);\r\n            if (isModified)\r\n                break;\r\n    }\r\n        return isModified;\r\n}","import { isNotMatched } from \"../util/is-not-matched\";\r\n\r\nexport class ValueChangeNotification {\r\n    private attributeChangeSubscriptions: Array<any> = new Array<any>();\r\n\r\n    onPropValueChanged(controlId: number, subscription: { [key: string]: any }, func: Function) {\r\n        this.attributeChangeSubscriptions.push({ controlId: controlId, names: subscription.names, props: subscription.props, func: func });\r\n    }\r\n\r\n\r\n    notifyValueChanged(name, value, oldValue, isProps: boolean = false) {\r\n        if ((!isProps && this.isNotEqual(oldValue, value)) && this.onPropValueChanged) {\r\n            let subscriptions = this.attributeChangeSubscriptions.filter(t => t.names.indexOf(name) != -1);\r\n            subscriptions.forEach(subscribe => {\r\n                if (subscribe.props && subscribe.props[name])\r\n                    subscribe.func(subscribe.props[name])\r\n            });\r\n        }\r\n    }\r\n\r\n    private isNotEqual(leftValue: any, rightValue: any) {\r\n        if (Array.isArray(leftValue) && Array.isArray(rightValue)) {\r\n            let isNotEqual = leftValue.length != rightValue.length;\r\n            if (!isNotEqual)\r\n                for (var i = 0; i < leftValue.length; i++) {\r\n                    isNotEqual = isNotMatched(leftValue[i], rightValue[i]);\r\n                    if (isNotEqual)\r\n                        break;\r\n                }\r\n            return isNotEqual;\r\n        }\r\n        return leftValue != rightValue;\r\n    }\r\n\r\n    destroy(controlId: number) {\r\n        for (var i = 0; i < this.attributeChangeSubscriptions.length; i++) {\r\n            if (this.attributeChangeSubscriptions[i].controlId == controlId) {\r\n                this.attributeChangeSubscriptions.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}","import { ValueChangeNotification } from \"./value-change-notification\";\r\nimport { OverrideConfigProp } from \"../models/interface/override-config-prop\";\r\n\r\nconst FILTER: string = \"filter\";\r\nconst FUNCTION: string = \"function\";\r\nconst ERRORS: string = \"errors\";\r\nexport class PropDescriptor extends ValueChangeNotification{\r\n    protected isDefinedFilter: boolean;\r\n\r\n    props: { [key: string]: any };\r\n\r\n    protected checkFilterFunction() {\r\n        let descriptor = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(this), FILTER);\r\n        this.isDefinedFilter = (descriptor && !descriptor.get && !descriptor.set && typeof this[FILTER] == FUNCTION);\r\n    }\r\n\r\n   \r\n    overrideProp(props:OverrideConfigProp){\r\n        Object.keys(props).forEach(t=>{\r\n            Object.defineProperty(this,t,props[t]);    \r\n        })\r\n\r\n    }\r\n\r\n    defineProp(propName: string) {\r\n        let value = this.props[propName];\r\n        let oldValue = null;\r\n        Object.defineProperty(this.props, propName,\r\n            {\r\n                get: () => { return value },\r\n                set: (v) => {\r\n                    value = v;\r\n                    this.notifyValueChanged(`props.${propName}`, value, oldValue, false);\r\n                    oldValue = value;\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    protected overrideProps() {\r\n        [\"disabled\", \"label\", \"placeholder\", \"hide\", \"description\", \"focus\", \"readonly\", \"class\", \"source\"].forEach(t => {\r\n           let descriptor = this.getDescriptor(t);\r\n            let value = null;\r\n            let oldValue = null;\r\n            Object.defineProperty(this, t, {\r\n                get: () => { return descriptor ? descriptor.get.call(this) : value; },\r\n                set: (v) => {\r\n                    value = v;\r\n                    if (descriptor && descriptor.set)\r\n                        descriptor.set.call(this, v);\r\n                    super.notifyValueChanged(t, value, oldValue);\r\n                    oldValue = v;\r\n                }\r\n            });\r\n        })\r\n    }\r\n\r\n\r\n    protected overrideErrorsProp(formControl: any) {\r\n        let value = formControl.errors;\r\n        let errorMessage = '';\r\n        let oldValue = formControl.errorMessage;\r\n        Object.defineProperty(formControl, ERRORS,\r\n            {\r\n                get: () => { return value },\r\n                set: (v) => {\r\n                    value = v;\r\n                    errorMessage = formControl.errorMessage;\r\n                    this.notifyValueChanged(`errorMessage`, errorMessage || \"\", oldValue);\r\n                    oldValue = formControl.errorMessage;\r\n                }\r\n            })\r\n        formControl[ERRORS] = formControl[ERRORS];\r\n    }\r\n\r\n    protected getDescriptor(propName:string){\r\n\r\n        let descriptor = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(this), propName);\r\n        if(!descriptor)\r\n            descriptor = Object.getOwnPropertyDescriptor(this, propName);\r\n            return descriptor;\r\n    }\r\n\r\n\r\n\r\n}","export const FILE : string = 'file';\r\n\r\nexport const RANGE:string = 'range';\r\n\r\nexport const CHECKBOX:string = 'checkbox';\r\n\r\nexport const BLANK: string = \"\";\r\n\r\nexport const HIDE: string = \"hide\";\r\n\r\nexport const PROP: string = \"prop\";\r\n\r\nexport const ATTR: string = \"attr\";\r\n\r\nexport const EVENTS: string = \"events\";\r\n\r\nexport const FOCUS: string = \"focus\";\r\n\r\nexport const DESCRIPTION: string = \"description\";\r\n\r\nexport const LABEL: string = \"label\";\r\n\r\nexport const READONLY: string = \"readonly\";\r\n\r\nexport const INNER_TEXT: string = \"innertext\";\r\n\r\nexport const CLASS: string = \"class\";\r\n\r\nexport const STYLE: string = \"style\";\r\n\r\nexport const RXWEB: string = \"rxweb-\";\r\n\r\nexport const RADIO: string = \"radio\";\r\n\r\nexport const CHECKED: string = \"checked\";\r\n\r\nexport const STRING: string = \"string\";\r\n\r\nexport const FUNCTION: string = \"function\";\r\n\r\nexport const SQUARE: string = \"{\";\r\n\r\nexport const COLON: string = \":\";\r\n\r\nexport const CLICK: string = \"click\";\r\n\r\nexport const INPUT: string = \"input\";\r\n\r\nexport const TEXT:string = \"text\";\r\n\r\nexport const CONTROL: string = 'control';\r\n\r\nexport const BLUR: string = 'blur';\r\n\r\nexport const SELECT: string = \"select\";\r\n\r\nexport const TEXTAREA: string = \"textarea\";\r\n\r\nexport const BOOLEAN: string = \"boolean\";\r\n\r\nexport const NONE: string = \"none\";\r\n\r\nexport const DISPLAY: string = \"display\";\r\n\r\nexport const ADDITIONAL_CLASS: string = \"additional-class\";\r\n\r\nexport const SELECT_MULTIPLE: string = \"select-multiple\";\r\n\r\nexport const SOURCE: string = \"source\";\r\n\r\nexport const RXWEB_ID_STRING: string = \"string\";\r\n\r\nexport const ADVANCE: string = \"advance\";\r\n\r\nexport const SQUARE_CONTROL: string = \"[control]\";\r\n\r\nexport const SQUARE_LABEL: string = \"[label]\";\r\n\r\nexport const SQUARE_SMALL: string = \"[small]\";\r\n\r\nexport const SQUARE_ERROR: string = \"[error]\";\r\n\r\nexport const FILTER: string = \"filter\";\r\n\r\nexport const INPUT_TEXT: string = \"input-text\";\r\n\r\nexport const PREPEND_LEFT: string = \"prepend-left\";\r\n\r\nexport const PREPEND_RIGHT: string = \"prepend-right\";\r\n\r\nexport const PREPEND_BOTH: string = \"prepend-both\";\r\n\r\nexport const CONDITIONAL_VALIDATOR: string = \"conditionalValidator\"\r\n\r\nexport const INLINE = \"inline\";","export class Linq{\r\nprivate static extractArguments(splitTexts: string[]): string[] {\r\n        let expressionArguments: string[] = [\"this\"];\r\n        if (splitTexts && splitTexts[0])\r\n            splitTexts[0].split(\",\").forEach(t => expressionArguments.push(t.trim().replace(\"(\", \"\").replace(\")\", \"\")));\r\n        return expressionArguments;\r\n    }\r\n\r\n    static dynamicConfigParser(expressionString: string): any[] {\r\n        let controlNames = [];\r\n        let expressionArguments = Linq.extractArguments(expressionString.match(/\\(([^)]+)\\)/g));\r\n        let splitString: string[] = expressionString.replace(new RegExp(/\\r?\\n|\\r|;/g), ' ').replace(/[\"%()\\{}=\\\\?Â´`'#<>|,;:+-]+/g, \" \").split(/ /g);\r\n        if (expressionArguments.length > 3)\r\n            expressionArguments.splice(expressionArguments.length - 1, 1)\r\n        splitString.forEach((t, i) => {\r\n            if (t) {\r\n                if (t.includes(\"controlsConfig.\")) {\r\n                    let splitText = t.split(\"controlsConfig.\");\r\n                    if (splitText.length > 1)\r\n                        controlNames.push(splitText[1].split(\".\")[0]);\r\n                } else if (t.includes(\"controlsConfig[\")) \r\n                    controlNames.push(splitString[i+1]);\r\n            }\r\n        })\r\n        return controlNames;\r\n    }\r\n}\r\n\r\n","export  class ControlState {\r\n    static controlId: number = 1;\r\n\r\n    static controls: { [key: string]: any } = {};\r\n}\r\n\r\nexport class NotificationState {\r\n    static notificationId: number = 1;\r\n\r\n    static notifications: {\r\n        [key: string]: any\r\n    } = {};\r\n}","import { PropDescriptor } from './prop-descriptor'\r\nimport { FILTER, SOURCE } from '../const/app.const'\r\nimport { ActionResult } from \"../models/interface/action-config\"\r\nimport { Linq } from '../util/linq'\r\nimport { NotificationState } from '../statics/control-state';\r\nexport abstract class BaseFormControlConfig extends PropDescriptor {\r\n    config: { [key: string]: any };\r\n    source: any[];\r\n\r\n    constructor(private configs: { [key: string]: any }, private notificationId: number) {\r\n        super();\r\n\r\n    }\r\n\r\n    setNotification() {\r\n        if (NotificationState.notifications[this.notificationId])\r\n            if (!NotificationState.notifications[this.notificationId][this.config.name])\r\n                NotificationState.notifications[this.notificationId][this.config.name] =\r\n                    this.controlNotifications = { filter: [], disabled: [], label: [], description: [], hide: [], placeholder: [], readonly: [], focus: [], class: [] }\r\n            else\r\n                this.controlNotifications = NotificationState.notifications[this.notificationId][this.config.name];\r\n        this.complete();\r\n    }\r\n\r\n\r\n\r\n    complete() {\r\n        for (let action in this.controlNotifications) {\r\n            let descriptor = this.getDescriptor(action);\r\n            if ((descriptor && descriptor.get) || this.isDefinedFilter) {\r\n                let stringFunction = this.isDefinedFilter ? String(this[FILTER]) : String(descriptor.get);\r\n                let columnNames = Linq.dynamicConfigParser(stringFunction);\r\n                columnNames.forEach(column => {\r\n                    if (!NotificationState.notifications[this.notificationId][column])\r\n                        NotificationState.notifications[this.notificationId][column] = { filter: [], disabled: [], label: [], description: [], hide: [], placeholder: [], readonly: [], focus: [], class: [] }\r\n                    let controlNotifications = NotificationState.notifications[this.notificationId][column];\r\n                    controlNotifications[action].push(this.config.name)\r\n                })\r\n            }\r\n        }\r\n        this.overrideProps();\r\n        this.updateActionValue();\r\n    }\r\n\r\n    refresh(actionName?: string) {\r\n        for (var columnName in this.controlNotifications) {\r\n            if (this.controlNotifications[columnName].length > 0)\r\n                this.controlNotifications[columnName].forEach(x => {\r\n                    if (columnName == FILTER)\r\n                        this.configs[x].value = null;\r\n                    if (x != this.config.name)\r\n                        this.configs[x].refresh(columnName);\r\n                    else\r\n                        this.setActionValue(columnName);\r\n                })\r\n        }\r\n        if (actionName)\r\n            this.setActionValue(actionName);\r\n    }\r\n\r\n\r\n    private setActionValue(actionName: string) {\r\n        if (actionName == FILTER && this.isDefinedFilter) {\r\n            this[FILTER].call(this);\r\n        } else\r\n            this[actionName == FILTER ? SOURCE : actionName] = this[actionName];\r\n    }\r\n\r\n    private updateActionValue() {\r\n        [\"disabled\", \"label\",\"img\", \"placeholder\", \"hide\", \"description\", \"focus\", \"readonly\", \"class\", \"filter\", \"source\"].forEach(key => {\r\n            switch (key) {\r\n                case FILTER:\r\n                    if (this.isDefinedFilter && key == FILTER)\r\n                        this[FILTER]();\r\n                    if (this.config.filter)\r\n                        this[FILTER] = this.config.filter;\r\n                    break;\r\n                case SOURCE:\r\n                    if (this.config[key])\r\n                        this[key] = this.config[key];\r\n                    if (key == SOURCE && !this.source)\r\n                        this[key] = [];\r\n                    break;\r\n                default:\r\n                    if (this.config.ui && this.config.ui[key])\r\n                        this[key] = this.config.ui[key];\r\n                    else\r\n                        this[key == FILTER ? SOURCE : key] = this._actionResult[key];\r\n                    break;\r\n\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n\r\n    private _actionResult: ActionResult = {\r\n        label: undefined,\r\n        img: undefined,\r\n        placeholder: undefined,\r\n        source: [],\r\n        filter: [],\r\n        hide: false,\r\n        description: undefined,\r\n        disabled: false,\r\n        focus: false,\r\n        readonly: false,\r\n        class: [],\r\n        prependText: ''\r\n    };\r\n\r\n    private controlNotifications: {\r\n        disabled?: string[],\r\n        placeholder?: string[],\r\n        filter?: string[],\r\n        hide?: string[],\r\n        description?: string[],\r\n        label?: string[],\r\n        focus?: string[],\r\n        readonly: string[],\r\n        class: string[],\r\n        img?:string[]\r\n    };\r\n\r\n}","import { OverrideConfigProp } from \"../models/interface/override-config-prop\";\r\n\r\nexport const dynamicContainer:\r\n    {\r\n        registerComponent(name: string, target: any): void,\r\n        registerOverrideProp(props:{[key:string]:OverrideConfigProp}),\r\n        getOverrideProp(name:string):OverrideConfigProp\r\n        getComponent(name: string): { name: string, instance: any };\r\n    } = new (class {\r\n        private components: Array<{ name: string, instance: any}>  = [];\r\n        private overrideProps:any = {};\r\n        registerComponent(name:string,target: any):void {\r\n            let componentContainer = this.components.filter(component => component.instance == target)[0]\r\n            if (!componentContainer)\r\n                this.components.push({ instance: target, name: name});\r\n        }\r\n\r\n        registerOverrideProp(props:{[key:string]:OverrideConfigProp}){\r\n            if(props)\r\n                Object.keys(props).forEach(t=>this.overrideProps[t] = props[t]);\r\n        }\r\n\r\n        getOverrideProp(name:string):OverrideConfigProp{\r\n            return this.overrideProps[name];\r\n        }    \r\n\r\n        getComponent(name: string): { name: string, instance: any } {\r\n            return this.components.filter(component => component.name == name)[0]\r\n        }\r\n\r\n})();\r\n","import { ValidatorFn, AsyncValidatorFn } from \"@angular/forms\"\r\nimport {  Hooks} from \"../models/interface/action-config\"\r\n\r\nimport { BaseFormControlConfig } from './base-form-control-config'\r\nimport { RxFormControl } from \"@rxweb/reactive-form-validators\";\r\nimport { dynamicContainer } from \"../core/dynamicContainer\";\r\n\r\n\r\nexport abstract class FormControlConfig extends BaseFormControlConfig {\r\n    private _formControl: RxFormControl;\r\n\r\n    constructor(fieldConfig: { [key: string]: any }, public controlsConfig: { [key: string]: FormControlConfig },notificationId:number) {\r\n        super(controlsConfig, notificationId);\r\n        this.config = fieldConfig;\r\n       this.overrideProperty();\r\n        this.value = fieldConfig.value;\r\n        super.checkFilterFunction();\r\n        this.props = this.config.props || Object.create({});\r\n        this.setNotification();\r\n    }\r\n\r\n    private overrideProperty(){\r\n        if(this.config.overrideProps){\r\n            this.config.overrideProps.forEach(t=>{\r\n                let propInfo = dynamicContainer.getOverrideProp(t);\r\n                this.overrideProp(propInfo);\r\n            })\r\n        }\r\n    }\r\n\r\n    overrides:any = {};\r\n\r\n    \r\n    inputs: any;\r\n    events: any;\r\n\r\n    value: any;\r\n    disabled: boolean;\r\n    label: string;\r\n    img: string;\r\n    placeholder: string;\r\n    hide: boolean;\r\n    description: string;\r\n    focus: boolean;\r\n    readonly: boolean;\r\n    class: string[];\r\n\r\n    isPlainTextMode: boolean;\r\n    \r\n    validator: ValidatorFn;\r\n    asyncValidator: AsyncValidatorFn;\r\n\r\n    hooks: Hooks\r\n\r\n\r\n    set formControl(value: RxFormControl) {\r\n        this._formControl = value;\r\n        setTimeout(() => this.overrideErrorsProp(this._formControl), 10);\r\n    }\r\n\r\n    get formControl() {\r\n        return this._formControl;\r\n    }\r\n\r\n    get errorMessage(): string {\r\n        return this.formControl.errorMessage;\r\n    }\r\n\r\n    get prependText() {\r\n        return this.config.ui ? this.config.ui.prependText : '';\r\n    }\r\n}\r\n\r\nexport class ControlConfig extends FormControlConfig {\r\n    constructor(fieldConfig: { [key: string]: any }, controlsConfig: { [key: string]: FormControlConfig }) {\r\n        super(fieldConfig, controlsConfig, 0);\r\n    }\r\n}","import { AbstractControl,FormGroup } from \"@angular/forms\"\r\n\r\nexport class ApplicationUtil\r\n{\r\n    static getRootFormGroup(control: AbstractControl): FormGroup {\r\n        if (control.parent) {\r\n            return this.getRootFormGroup(control.parent);\r\n        }\r\n        return <FormGroup>control;\r\n    }\r\n\r\n    static isObject(value: any): boolean {\r\n        return Object.prototype.toString.call(value) === '[object Object]';\r\n    }\r\n}","import { ValidatorFn, AsyncValidatorFn } from \"@angular/forms\"\r\n\r\nimport { RxFormGroup, RxFormArray, RxFormControl, RxwebValidators } from '@rxweb/reactive-form-validators';\r\nimport { DynamicFormConfiguration } from \"../models/interface\";\r\nimport { FormControlConfig } from \"./form-control-config\";\r\nimport { getInstance } from \"../functions/get-instance.function\";\r\nimport { DynamicFormBuildConfig } from '../models/interface/dynamic-form-build-config'\r\nimport { ApplicationUtil } from \"../util/application-util\";\r\nimport { NotificationState } from \"../statics/control-state\";\r\n\r\nconst ARRAY: string = \"array\";\r\nexport class RxDynamicFormBuilder {\r\n    private formConfiguration: DynamicFormConfiguration;\r\n    formGroup(fields: any[], dynamicFormConfig?: DynamicFormConfiguration): DynamicFormBuildConfig {\r\n        let notificationId = NotificationState.notificationId++;\r\n        NotificationState.notifications[notificationId] = {};\r\n        this.formConfiguration = dynamicFormConfig || {};\r\n        let entityObject: { [key: string]: any } = {};\r\n        let formFieldConfigs = new Array<FormControlConfig>();\r\n        let modelConfig = {};\r\n        let formGroup = new RxFormGroup({}, entityObject, {}, undefined);\r\n        fields.forEach((x, i) => {\r\n            if (x.type == ARRAY) {\r\n                this.createFormArray(modelConfig, x, ApplicationUtil.getRootFormGroup(formGroup) as RxFormGroup, entityObject, notificationId);\r\n            } else {\r\n                let splitName = x.name.split('.');\r\n                let name = x.name;\r\n                if (splitName.length > 1) {\r\n                    if (!entityObject[splitName[0]]) {\r\n                        entityObject[splitName[0]] = {};\r\n                        formGroup.addControl(splitName[0], new RxFormGroup({}, entityObject[splitName[0]], {}, undefined));\r\n                        formGroup = formGroup.controls[splitName[0]] as RxFormGroup;\r\n                    } else if (formGroup.controls[splitName[0]] != undefined && formGroup.controls[splitName[0]] instanceof RxFormGroup) \r\n                        formGroup = formGroup.controls[splitName[0]] as RxFormGroup;\r\n                    name = splitName[1];\r\n                } else\r\n                    formGroup = ApplicationUtil.getRootFormGroup(formGroup) as RxFormGroup;\r\n                let modelInstance = this.getDynamicModelInstance(x, modelConfig, entityObject, name, notificationId);\r\n                formGroup.addControl(name, modelInstance.formControl);\r\n                formFieldConfigs.push(modelInstance)\r\n            }\r\n        });\r\n        if (this.formConfiguration.additionalConfig)\r\n            this.formConfiguration.additionalConfig.forEach(t => this.getModelInstance(t, modelConfig, notificationId));\r\n        let rootFormGroup = ApplicationUtil.getRootFormGroup(formGroup) as RxFormGroup;\r\n        rootFormGroup[\"model\"] = undefined;\r\n        return  {\r\n            controlsConfig: modelConfig,\r\n            formGroup: rootFormGroup\r\n        };\r\n    }\r\n\r\n\r\n    \r\n\r\n    private createFormArray(modelConfig: any, field: { [key: string]: any }, formGroup: RxFormGroup, entityObject: { [key: string]: any }, notificationId) {\r\n        modelConfig[field.name] = [];\r\n        entityObject[field.name] = [];\r\n        let formArray = new RxFormArray(entityObject[field.name], []);\r\n        \r\n        if (field.controlConfigs) {\r\n            if (field.rows)\r\n            field.rows.forEach(row => {\r\n                formArray.controls.push(this.createDynamicFormGroup(field, modelConfig[field.name], this.getRefObject(entityObject[field.name]), row, notificationId));\r\n            })\r\n            if (field.minimumRepeatCount && field.minimumRepeatCount > 0) {\r\n                let countLeft = field.minimumRepeatCount - (formArray.controls.length)\r\n                for (var i = 0; i < countLeft; i++)\r\n                    formArray.controls.push(this.createDynamicFormGroup(field, modelConfig[field.name], this.getRefObject(entityObject[field.name]), { fields: [] }, notificationId));\r\n            }\r\n            this.addTwoProp(modelConfig[field.name], field, entityObject[field.name], formArray,notificationId);\r\n            formGroup.addControl(field.name, formArray);\r\n        }\r\n    }\r\n\r\n    private getRefObject(entityObject:any[]) {\r\n        let jObject = {};\r\n        entityObject.push(jObject);\r\n        return jObject;\r\n    }\r\n\r\n\r\n    private addTwoProp(modelConfig: any, x, entityObject, formArray,notificationId) {\r\n        modelConfig.__proto__.addItem = () => {\r\n            formArray.controls.push(this.createDynamicFormGroup(x, modelConfig, this.getRefObject(entityObject), { fields: [] }, notificationId));\r\n        }\r\n\r\n        modelConfig.__proto__.removeItem = (index: number) => {\r\n            formArray.removeAt(index);\r\n            modelConfig.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    private createDynamicFormGroup(x, modelConfig, entityObject, row, notificationId) {\r\n        let nestedFormGroup = new RxFormGroup({}, entityObject, {}, undefined);\r\n        let jObject = {};\r\n        modelConfig.push(jObject);\r\n        Object.keys(x.controlConfigs).forEach(key => {\r\n            let field = row.fields.filter(x => x.name == key)[0];\r\n            let formControlConfig = { ...x.controlConfigs[key], ...{ name: key } };\r\n            if (field)\r\n                formControlConfig = { ...formControlConfig, ...field };\r\n            let modelInstance = this.getDynamicModelInstance(formControlConfig, jObject, entityObject, key, notificationId);\r\n            nestedFormGroup.addControl(key, modelInstance.formControl);\r\n        })\r\n        return nestedFormGroup;\r\n    }\r\n\r\n    private getModelInstance(x, modelConfig, notificationId) {\r\n        let configModel = (x.modelName) && this.formConfiguration && this.formConfiguration.controlConfigModels ? this.formConfiguration.controlConfigModels.filter((y) => y.modelName == x.modelName)[0] : undefined;\r\n        let modelArguments = [x, modelConfig, notificationId];\r\n        let model = undefined;\r\n        if (configModel) {\r\n            model = configModel.model;\r\n            if (configModel.arguments)\r\n                configModel.arguments.forEach(t => modelArguments.push(t));\r\n        } else\r\n            model = FormControlConfig;\r\n        let modelInstance = getInstance(model, modelArguments);\r\n        modelConfig[x.name] = modelInstance;\r\n        return modelInstance\r\n    }\r\n\r\n    private getDynamicModelInstance(x, modelConfig, entityObject, name, notificationId) {\r\n        let modelInstance = this.getModelInstance(x, modelConfig, notificationId);\r\n        let validators: ValidatorFn[] = [];\r\n        let asyncValidators: AsyncValidatorFn[] = [];\r\n        if (x.validators)\r\n            this.validatorBindings(validators, x.validators);\r\n        if (modelInstance.validator)\r\n            validators.push(modelInstance.validator.bind(modelInstance));\r\n        if (modelInstance.asyncValidator)\r\n            asyncValidators.push(modelInstance.asyncValidator.bind(modelInstance));\r\n        if (modelInstance)\r\n            entityObject[x.name] = x.value;\r\n        let baseObject = {};\r\n        baseObject[x.name] = x.value;\r\n        entityObject[x.name] = x.value;\r\n        modelInstance.formControl = new RxFormControl(x.value, validators, asyncValidators, entityObject, baseObject, name, undefined);\r\n        return modelInstance;\r\n    }\r\n\r\n    private validatorBindings(validations: any[], validationConfig: any) {\r\n        for (var column in RxwebValidators) {\r\n            if (validationConfig[column]) {\r\n                validations.push(RxwebValidators[column](validationConfig[column]));\r\n            }\r\n        }\r\n        return validations;\r\n    }\r\n}","export function getInstance(model: any, objectArguments: any[]) {\r\n    let classInstance = Object.create(model.prototype)\r\n    try{\r\n        model.apply(classInstance, objectArguments);\r\n    }catch(ex){\r\n        ///resolution of issue https://github.com/rxweb/rxweb/issues/188\r\n        classInstance = Reflect.construct(model,objectArguments);\r\n    }\r\n    return classInstance;\r\n}","\r\nconst commonAttributes = {\r\n    placeholder: ':placeholder',\r\n    readonly: ':readonly',\r\n    class: ':class',\r\n    name: '{config.name'\r\n};\r\nconst commonEvents = {\r\n    focus: ':focus',\r\n    input: 'true',\r\n    blur: 'blur'\r\n};\r\n\r\n\r\n\r\nconst checkBoxAndRadioDesign = ['div', [{ source: true }, {\r\n    for: {\r\n        source: function (item, index) {\r\n            return ['div', ['input', [{\r\n                attr: {\r\n                    type: '{config.type', ...commonAttributes, value: item[this.config.valuePropName || 'value'], checked: item[this.config.valuePropName || 'value'] == this.value,\r\n                    disabled: item.disabled ? item.disabled : ':disabled'\r\n\r\n                },\r\n                events: commonEvents,\r\n                overrideProp: (index == 0)\r\n            }],\r\n                'label', [{ prop: { innerText: item[this.config.textPropName || 'text'] } }]]]\r\n        }\r\n    }\r\n}\r\n\r\n]];\r\n\r\nconst configUiText = { innerText: ':props.text' };\r\nconst classAttribute = { class: ':class', style: { display: \":hide\" } };\r\n\r\nexport const DYNAMIC_ELEMENT_DESIGN_TREE: { [key: string]: any } = {\r\n\r\n    p: ['p', [{ prop: configUiText, attr: classAttribute }]],\r\n\r\n    h1: ['h1', [{ prop: configUiText, attr: classAttribute }]],\r\n\r\n    h2: ['h2', [{ prop: configUiText, attr: classAttribute }]],\r\n\r\n    h3: ['h3', [{ prop: configUiText, attr: classAttribute }]],\r\n\r\n    h4: ['h4', [{ prop: configUiText, attr: classAttribute }]],\r\n\r\n    h5: ['h5', [{ prop: configUiText, attr: classAttribute }]],\r\n\r\n    h6: ['h6', [{ prop: configUiText, attr: classAttribute }]],\r\n\r\n    a: ['a', [{ attr: { href: '{config.href', ...classAttribute, }, prop: configUiText }]],\r\n\r\n    hr: ['hr', [{ attr: commonAttributes }]],\r\n\r\n    strong: ['strong', [{ prop: configUiText, attr: classAttribute }]],\r\n\r\n    span: ['span', [{ prop: configUiText, attr: classAttribute }]],\r\n\r\n    img: ['img', [{ prop: { src: ':img' }, attr: { style: { display: \":img\" }, ...classAttribute } }]],\r\n\r\n    label: ['label', [{ prop: { innerText: ':label' }, attr: { style: { display: \":label\" }, ...classAttribute } }]],\r\n\r\n    small: ['small', [{ prop: { innerText: ':description' }, attr: { style: { display: \":description\" }, ...classAttribute } }]],\r\n\r\n    input: ['input', [{\r\n        attr: { type: '{config.type', ...commonAttributes, disabled: ':disabled' },\r\n        events: commonEvents,\r\n    }]],\r\n\r\n    error: [`span`, [{ prop: { innerText: ':errorMessage' }, attr: { style: { display: \":errorMessage\" }, ...commonAttributes } }]],\r\n\r\n    div: ['div', [{ attr: classAttribute }]],\r\n\r\n    card: ['div', [{ attr: classAttribute }]],\r\n\r\n    'card-header': ['div', [{ attr: classAttribute, prop: configUiText }]],\r\n\r\n    'card-body': ['div', [{ attr: classAttribute }]],\r\n\r\n    buttonGroup: ['div', [{\r\n        for: {\r\n            source: function (item) {\r\n                return ['label', [{\r\n                    attr: {\r\n                        type: '{config.type', ...commonAttributes, value: item[this.config.valuePropName || 'value']\r\n                    },\r\n                    events: commonEvents\r\n                }],\r\n                    'label', [{ prop: { innerText: item[this.config.textPropName || 'text'] } }]]\r\n            }\r\n        }\r\n    }\r\n\r\n    ]\r\n    ],\r\n\r\n    'prepend-left': [\"div\", [\r\n        \"div\", [\r\n            \"div\", [{ prop: { innerText: '{config.ui.prependText.left' } }]],\r\n        '[input-text]'\r\n    ]],\r\n\r\n    'prepend-right': [\"div\", [\r\n        '[input-text]',\r\n        \"div\", [\r\n            \"div\", [{ prop: { innerText: '{config.ui.prependText.right' } }]],\r\n    ]],\r\n\r\n    'prepend-both': [\"div\", [\r\n        \"div\", [\r\n            \"div\", [{ prop: { innerText: '{config.ui.prependText.left' } }]],\r\n        '[input-text]',\r\n        \"div\", [\r\n            \"div\", [{ prop: { innerText: '{config.ui.prependText.right' } }]],\r\n    ]],\r\n\r\n\r\n    textarea: ['textarea', [{ attr: { ...{ rows: '{config.ui.rows', cols: '{config.ui.cols' }, ...commonAttributes }, events: commonEvents }]],\r\n\r\n    radio: checkBoxAndRadioDesign,\r\n\r\n    'checkbox': checkBoxAndRadioDesign,\r\n\r\n    select: ['select', [{\r\n        attr: {\r\n            multiple: '{config.multiselect',\r\n        },\r\n        events: commonEvents,\r\n        source: true\r\n    },\r\n        'option', [{ prop: { innerText: `:placeholder` }, attr: { value: '', style: { display: \":placeholder\" } } }],\r\n    {\r\n        for: {\r\n            source: function (item) {\r\n                return ['option', [\r\n                    {\r\n                        prop: { innerText: item[this.config.textPropName || 'text'] }, attr: {\r\n                            value: item[this.config.valuePropName || 'value'],\r\n                            selected: Array.isArray(this.value) ? this.value.filter(x => item[this.config.valuePropName || 'value'] == x)[0] != undefined : item[this.config.valuePropName || 'value'] == this.value,\r\n                            disabled: item.disabled\r\n                        }\r\n                    }\r\n                ]];\r\n            }\r\n        }\r\n    }\r\n    ]],\r\n\r\n    button: ['button', [{ attr: { ...commonAttributes, name: '{config.name', type: '{config.type' }, events: { click: '{config.events.click' }, prop: { innerText: ':props.text' } }]],\r\n\r\n    alert: ['div', [{ attr: commonAttributes }]],\r\n\r\n    viewMode: {\r\n        basic: ['div', [{\r\n            attr: {\r\n                style: { display: \":hide\" }\r\n            }\r\n        },\r\n            '[label]',\r\n            '[control]',\r\n            '[error]',\r\n            '[small]'\r\n        ]],\r\n\r\n        horizontal: ['div', [{\r\n            attr: {\r\n                style: { display: \":hide\" }\r\n            }\r\n        },\r\n            '[label]',\r\n            'div', ['[control]', '[error]', '[small]']\r\n        ]],\r\n        inline: [],\r\n\r\n        advance: ['div', [\r\n            'div', [{\r\n                attr: {\r\n                    style: { display: \":hide\" }\r\n                }\r\n            },\r\n                '[img]', '[label]', '[control]', '[error]', '[small]']\r\n        ]]\r\n    }\r\n}\r\n\r\n","import { FILE, RANGE, CHECKBOX,RADIO,BLANK } from './app.const'\r\n\r\nexport const BOOSTRAP_CLASS_CONFIG: { [key: string]: any } = {\r\n    defaultControl: 'form-control',\r\n    fileControl: 'form-control-file',\r\n    readOnlyPlainText: 'form-control-plaintext',\r\n    rangeControl: 'form-control-range',\r\n    checkBoxAndRadioControl: 'form-check-input',\r\n    checkboxAndRadioControlInline: 'form-check-inline',\r\n    controlValid: 'is-valid',\r\n    controlInvalid: 'is-invalid',\r\n    validMessage: 'valid-feedback',\r\n    invalidMessage: 'invalid-feedback',\r\n}\r\n\r\nconst PREPEND_TEXT_CLASS_PATH = {\r\n    class: ['input-group-prepend'],\r\n    child: {\r\n        0: { class: ['input-group-text'] }\r\n    }\r\n}\r\nconst INPUT_GROUP = ['input-group'];\r\n\r\nexport const BOOTSTRAP_DESIGN_CONFIG: { [key: string]: any } = {\r\n\r\n\r\n    elementClassPath: {\r\n        \"prepend-left\": {\r\n            class: INPUT_GROUP,\r\n            child: {\r\n                0: PREPEND_TEXT_CLASS_PATH\r\n            }\r\n        },\r\n\r\n        \"prepend-right\": {\r\n            class: INPUT_GROUP,\r\n            child: {\r\n                1: PREPEND_TEXT_CLASS_PATH\r\n            }\r\n        },\r\n\r\n        \"prepend-both\": {\r\n            class: INPUT_GROUP,\r\n            child: {\r\n                0: PREPEND_TEXT_CLASS_PATH,\r\n                2: PREPEND_TEXT_CLASS_PATH\r\n            }\r\n        },\r\n\r\n        input: { class: [inputElementClassProvider, invalidClass ],listenerProps:[\":errorMessage\"] },\r\n\r\n        checkbox: {\r\n            class: [], child: {\r\n                0: {\r\n                    class: ['form-check', inLineRadioAndCheckbox],\r\n                    child: { 0: { class: ['form-check-input'] }, 1: { class: ['form-check-label'] } }\r\n                }\r\n            }\r\n        },\r\n\r\n        radio: {\r\n            class: [], child: {\r\n                0: {\r\n                    class: ['form-check', inLineRadioAndCheckbox],\r\n                    child: { 0: { class: ['form-check-input'] }, 1: { class: ['form-check-label'] } }\r\n                }\r\n            }\r\n        },\r\n\r\n        'error': { class: [function () { return !((this.formControl.validator || this.formControl.asyncValidator) && this.formControl.errorMessage) ? \"\": BOOSTRAP_CLASS_CONFIG.invalidMessage }], listenerProps: [\":errorMessage\"] },\r\n\r\n        button: { class: ['btn'] },\r\n\r\n        alert: { class: ['alert'] },\r\n\r\n        card: { class: ['card'] },\r\n\r\n        'card-header': { class: ['card-header'] },\r\n\r\n        'card-body': {class:['card-body']},\r\n\r\n        viewMode: {\r\n\r\n            basic: { class: ['form-group'] },\r\n\r\n            horizontal: {\r\n                class: ['form-group', 'row'],\r\n                child: {\r\n                    0: { class: [function () { return this.config.ui && this.config.ui.viewMode && this.config.ui.viewMode.horizontal && this.config.ui.viewMode.horizontal.label ? this.config.ui.viewMode.horizontal.label : ''  }]},\r\n                    1: {\r\n                        class: [function () { return this.config.ui && this.config.ui.viewMode && this.config.ui.viewMode.horizontal && this.config.ui.viewMode.horizontal.div ? this.config.ui.viewMode.horizontal.div : '' }],\r\n                    }\r\n                }\r\n            },\r\n            inline: {\r\n                class: [], child: {}},\r\n            advance: {\r\n                class: ['form-row', function () { return this.config && this.config.ui && this.config.ui.viewMode && this.config.ui.viewMode.advance && this.config.ui.viewMode.advance.root_div ? this.config.ui.viewMode.advance.root_div : '' }],\r\n                child: {\r\n                    0: {\r\n                        class: ['form-group', function () { return this.config &&  this.config.ui && this.config.ui.viewMode && this.config.ui.viewMode.advance && this.config.ui.viewMode.advance.div ? this.config.ui.viewMode.advance.div : '' }],\r\n                        child: {\r\n                            0: { class: [function () { return this.config &&  this.config.ui && this.config.ui.viewMode && this.config.ui.viewMode.advance && this.config.ui.viewMode.advance.label ? this.config.ui.viewMode.advance.label : '' } ]},\r\n                            2: { class: [function () { return this.config &&  this.config.ui && this.config.ui.viewMode && this.config.ui.viewMode.advance && this.config.ui.viewMode.advance.error ? this.config.ui.viewMode.advance.error : '' } ]},\r\n                            3: { class: [function () { return this.config.ui && this.config.ui.viewMode && this.config.ui.viewMode.advance && this.config.ui.viewMode.advance.small ? this.config.ui.viewMode.advance.small : '' }] }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        },\r\n        small: { class: ['form-text'] },\r\n\r\n        textarea: { class: [BOOSTRAP_CLASS_CONFIG.defaultControl, invalidClass], listenerProps: [\":errorMessage\"]  },\r\n\r\n        select: { class: [BOOSTRAP_CLASS_CONFIG.defaultControl, invalidClass], listenerProps: [\":errorMessage\"]  }\r\n\r\n    }\r\n}\r\n\r\nfunction inputElementClassProvider() {\r\n    let elementClass: string = '';\r\n    if (!this.readonly || (this.readonly && !this.isPlainTextMode))\r\n        switch (this.config.type) {\r\n            case FILE:\r\n                elementClass = BOOSTRAP_CLASS_CONFIG.fileControl;\r\n                break;\r\n            case RANGE:\r\n                elementClass = BOOSTRAP_CLASS_CONFIG.rangeControl;\r\n                break;\r\n            case RADIO:\r\n            case CHECKBOX:\r\n                elementClass = BLANK;\r\n                break;\r\n            default:\r\n                elementClass = BOOSTRAP_CLASS_CONFIG.defaultControl;\r\n                break;\r\n        }\r\n    else if (this.readonly && this.isPlainTextMode)\r\n        elementClass = BOOSTRAP_CLASS_CONFIG.readOnlyPlainText;\r\n    return elementClass;\r\n}\r\n\r\nfunction inLineRadioAndCheckbox() {\r\n    return this.config && this.config.inline ? ['form-check-inline'] : [];\r\n}\r\n\r\nfunction invalidClass() {\r\n    let invalidClass = ((this.formControl.validator || this.formControl.asyncValidator) && this.formControl.errorMessage) ? BOOSTRAP_CLASS_CONFIG.controlInvalid : ''; return invalidClass;\r\n}","export function objectPropValue(key: string, valueObject: { [key: string]: any }) {\r\n    let jObject = undefined;\r\n    let splitTexts = key.split('.');\r\n    for (var column of splitTexts) {\r\n        if (!jObject)\r\n            jObject = valueObject;\r\n        if (jObject)\r\n            jObject = jObject[column];\r\n        else\r\n            break;\r\n    }\r\n    return jObject;\r\n}\r\n\r\nexport function setObjectPropValue(key: string,value:any, valueObject: { [key: string]: any }) {\r\n    let jObject = valueObject;\r\n    let splitTexts = key.split('.');\r\n    for (var i = 0; i < splitTexts.length - 1; i++) {\r\n        if (jObject)\r\n            jObject = jObject[splitTexts[i]];\r\n    }\r\n    jObject[splitTexts[splitTexts.length - 1]] = value;\r\n}","import { COLON, BLANK, STRING, SQUARE} from '../../const/app.const';\r\nimport { DynamicNodeConfig } from '../../models/interface/dynamic-node-config'\r\nimport { objectPropValue } from '../../functions/object-prop-value.function'\r\nimport { FormControlConfig } from \"../../services/form-control-config\"\r\n\r\nconst PROPS: string = \":props.\";\r\nconst GLOBAL_MATCH: string = \"g\";\r\nconst DOT: string = \".\";\r\n\r\nexport abstract class BaseObjectAccessor {\r\n    controlConfig: FormControlConfig;\r\n    subscribeProps: { [key: string]: any } = {\r\n        names: [], props: {}\r\n    };\r\n\r\n    constructor(public dynamicNodeConfig: DynamicNodeConfig) { this.controlConfig = this.dynamicNodeConfig.controlConfig; }\r\n\r\n    getPropName(text: string) {\r\n        if (text[0] == COLON || (text[0] == SQUARE)) {\r\n            return text.replace(new RegExp(COLON, GLOBAL_MATCH), BLANK).replace(new RegExp(SQUARE, GLOBAL_MATCH), BLANK);\r\n        }\r\n        return text;\r\n    }\r\n\r\n\r\n    getValue(text: string) {\r\n        if (typeof text == STRING && ((text[0] == COLON) || (text[0] == SQUARE))) {\r\n            text = text.replace(new RegExp(COLON, GLOBAL_MATCH), BLANK).replace(new RegExp(SQUARE, GLOBAL_MATCH), BLANK);\r\n            return objectPropValue(text, this.controlConfig);\r\n        }\r\n        return text;\r\n    }\r\n\r\n    setPropSubscription(propName: string, type: string, attributeName: string, valuePropName: string = '', parentPropName: string = '') {\r\n        if (propName.startsWith(PROPS)) \r\n            this.defineProp(propName);\r\n\r\n        let prop = this.getPropName(propName);\r\n\r\n        if (!this.subscribeProps.props[prop])\r\n            this.subscribeProps.props[prop] = {};\r\n        if (!this.subscribeProps.props[prop][type])\r\n            this.subscribeProps.props[prop][type] = {}; \r\n        if (parentPropName) {\r\n            this.subscribeProps.props[prop][type][parentPropName] = {};\r\n            this.subscribeProps.props[prop][type][parentPropName][attributeName] = (valuePropName) ? valuePropName : propName;\r\n        } else\r\n            this.subscribeProps.props[prop][type][attributeName] = (valuePropName) ? valuePropName : propName;\r\n\r\n        if (this.subscribeProps.names.indexOf(prop) == -1)\r\n            this.subscribeProps.names.push(prop);\r\n\r\n    }\r\n\r\n    isSubscribeProp(propName:string) {\r\n        return (typeof propName == STRING && (propName[0] == COLON));\r\n    }\r\n\r\n    defineProp(propName: string) {\r\n        let splitText = propName.split(DOT);\r\n        if (splitText.length > 1) {\r\n            let descriptor = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(this.controlConfig.props), splitText[1]);\r\n            if (!descriptor)\r\n                this.controlConfig.defineProp(splitText[1]);\r\n        }\r\n    }\r\n}","import { ViewContainerRef, ComponentFactoryResolver, ComponentRef, EmbeddedViewRef } from \"@angular/core\"\r\nimport { FormControlConfig } from '../../services/form-control-config'\r\nimport { DynamicFormBuildConfig } from \"../../models/interface/dynamic-form-build-config\"\r\nexport interface ComponentType<T> {\r\n    new (...args: any[]): T;\r\n}\r\n\r\nexport class ComponentView<T> {\r\n    private component: ComponentType<T>;\r\n    private viewContainerRef: ViewContainerRef;\r\n    private componentFactoryResolver: ComponentFactoryResolver;\r\n    private componentRef: ComponentRef<T>;\r\n\r\n    constructor(_component: ComponentType<T>, _viewContainerRef: ViewContainerRef, _componentFactoryResolver: ComponentFactoryResolver,private formControlConfig:FormControlConfig,private dynamicFormBuildConfig:DynamicFormBuildConfig) {\r\n        this.component = _component;\r\n        this.viewContainerRef = _viewContainerRef;\r\n        this.componentFactoryResolver = _componentFactoryResolver;\r\n    }\r\n\r\n    create(): void {\r\n        let componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.component);\r\n        this.componentRef = this.viewContainerRef.createComponent(componentFactory, this.viewContainerRef.length, this.viewContainerRef.parentInjector);\r\n        this.setParams(this.componentRef.instance);\r\n    }\r\n\r\n    private setParams(instance: { [key: string]: any }) {\r\n        if (this.formControlConfig.inputs) {\r\n            let propNames = Object.getOwnPropertyNames(this.formControlConfig.inputs);\r\n            for (let propName of propNames) \r\n                this.overridePropAndSetValue(instance, propName, this.formControlConfig.inputs);\r\n        }\r\n        instance[\"controlConfig\"] = this.formControlConfig;\r\n        instance[\"dynamicFormBuildConfig\"] = this.dynamicFormBuildConfig;\r\n    }\r\n\r\n    overridePropAndSetValue(instance: any, propName: string, inputs: any) {\r\n        let descriptor = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(inputs), propName)\r\n        let value = '';\r\n        if (!descriptor) {\r\n            value = inputs[propName];\r\n            delete inputs[propName];\r\n        }\r\n        Object.defineProperty(inputs, propName, {\r\n            get() { return (descriptor) ? descriptor.get() : value },\r\n            set(v) { instance[propName] = v; (descriptor) ? descriptor.set.call(inputs, v) : value = v; }\r\n        })\r\n        instance[propName] = descriptor ? descriptor.get.call(inputs) : value;\r\n    }\r\n\r\n    rootNode(): HTMLElement {\r\n        return (this.componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\r\n    }\r\n\r\n    getComponentRef(): ComponentRef<any> {\r\n        return this.componentRef;\r\n    }\r\n\r\n    destroy():void {\r\n        if (this.componentRef)\r\n        {\r\n            this.componentRef.destroy();\r\n            this.componentRef = undefined;\r\n        }\r\n    }\r\n}","import { ElementEventProcessor } from './element-event-processor';\r\nimport { DynamicNodeConfig } from '../../models/interface/dynamic-node-config';\r\nimport { ADDITIONAL_CLASS, BOOLEAN, NONE, BLANK, DISPLAY, FUNCTION, STRING, ATTR, PROP, CLASS, STYLE } from '../../const/app.const';\r\n\r\nexport abstract class ElementPropsAccessor extends ElementEventProcessor {\r\n    private oldAdditionalClasses: string[] = [];\r\n    private oldClasses: string[] = [];\r\n    constructor(dynamicNodeConfig: DynamicNodeConfig) { super(dynamicNodeConfig); }\r\n\r\n\r\n    bindAttribute(attr: { [key: string]: any }, isSubscribe: boolean) {\r\n        Object.keys(attr).forEach(attributeName => {\r\n            let value = (attributeName !== STYLE) ? this.getValue(attr[attributeName]) : attr[attributeName];\r\n            switch (attributeName) {\r\n                case ADDITIONAL_CLASS:\r\n                case CLASS:\r\n                    this.setClass(value, attributeName);\r\n                    break;\r\n                case STYLE:\r\n                    Object.keys(attr[attributeName]).forEach(x => {\r\n                        let value = this.getValue(attr[attributeName][x]);\r\n                        this.setStyleProp(x, value);\r\n                        if (isSubscribe && this.isSubscribeProp(attr[attributeName][x]))\r\n                            this.setPropSubscription(attr[attributeName][x], ATTR, x, '', STYLE)\r\n                    })\r\n                    break;\r\n                default:\r\n                    this.addOrRemoveAttribute(attributeName, value, attr[attributeName] === \"\");\r\n                    break;\r\n            }\r\n            if (isSubscribe && attributeName !== STYLE && this.isSubscribeProp(attr[attributeName]))\r\n                this.setPropSubscription(attr[attributeName], ATTR, attributeName);\r\n        })\r\n\r\n    }\r\n\r\n    bindProp(prop: { [key: string]: any }, isSubscribe: boolean) {\r\n        Object.keys(prop).forEach(propName => {\r\n            let value = this.getValue(prop[propName]);\r\n            this.setProperty(propName, (value !== undefined && value !== null && value !== false) ? value : \"\")\r\n            if (isSubscribe && this.isSubscribeProp(prop[propName]))\r\n                this.setPropSubscription(prop[propName], PROP, propName);\r\n        });\r\n    }\r\n\r\n    setClass(classes: any[], type: string) {\r\n        classes = this.getClassNames(type == ADDITIONAL_CLASS ? this.dynamicNodeConfig.additionalClasses.class : classes);\r\n        type == ADDITIONAL_CLASS ? this.addOrRemoveClasses(this.oldAdditionalClasses, false) : this.addOrRemoveClasses(this.oldClasses, false);\r\n        this.addOrRemoveClasses(classes);\r\n        switch (type) {\r\n            case ADDITIONAL_CLASS:\r\n                this.oldAdditionalClasses = classes;\r\n                break;\r\n            case CLASS:\r\n                this.oldClasses = classes;\r\n                break;\r\n        }\r\n    }\r\n\r\n    setStyleProp(propName: string, value: any) {\r\n        switch (propName) {\r\n            case DISPLAY:\r\n                value = (typeof value == BOOLEAN || value === undefined) ? value : !(value);\r\n                value = (value) ? NONE : BLANK;\r\n                break;\r\n        }\r\n        this.addOrRemoveStyle(propName, value);\r\n    }\r\n\r\n    setProperty(propertyName: string, value: any) {\r\n        this.dynamicNodeConfig.renderer.setProperty(this.element, propertyName, value);\r\n    }\r\n\r\n    addOrRemoveClasses(classes: any[], isAdd: boolean = true) {\r\n\r\n        if (isAdd)\r\n            classes.forEach(t => this.dynamicNodeConfig.renderer.addClass(this.element, t));\r\n        else\r\n            classes.forEach(t => this.dynamicNodeConfig.renderer.removeClass(this.element, t));\r\n    }\r\n\r\n\r\n    addOrRemoveStyle(styleName: string, value: any) {\r\n        if (value)\r\n            this.dynamicNodeConfig.renderer.setStyle(this.element, styleName, value);\r\n        else\r\n            this.dynamicNodeConfig.renderer.removeStyle(this.element, styleName);\r\n    }\r\n\r\n    addOrRemoveAttribute(attributeName: string, value: any,isBlank:boolean) {\r\n        if (value || isBlank)\r\n            this.dynamicNodeConfig.renderer.setAttribute(this.element, attributeName, value);\r\n        else\r\n            this.dynamicNodeConfig.renderer.removeAttribute(this.element, attributeName);\r\n    }\r\n\r\n    private getClassNames(classes: any[]) {\r\n        let elementClasses = [];\r\n        if (classes)\r\n            classes.forEach(t => {\r\n                if (typeof t == STRING)\r\n                    elementClasses.push(t);\r\n                else if (typeof t == FUNCTION) {\r\n                    let elementClass = t.call(this.controlConfig);\r\n                    if (elementClass && !Array.isArray(elementClass))\r\n                        elementClasses.push(elementClass)\r\n                    else if (Array.isArray(elementClass))\r\n                        elementClass.forEach(x => elementClasses.push(x))\r\n                }\r\n            })\r\n        return elementClasses;\r\n    }\r\n}","import { ElementAccessor } from './element-accessor';\r\nimport { DynamicNodeConfig } from '../../models/interface/dynamic-node-config';\r\nimport { CONDITIONAL_VALIDATOR, BLUR, FOCUS, SELECT, INPUT, CLICK, EVENTS } from '../../const/app.const';\r\nimport { ValidatorFn } from '@angular/forms';\r\n\r\nexport class ElementEventProcessor extends ElementAccessor{\r\n    eventListeners: any[];\r\n    private conditionalValidator: ValidatorFn;\r\n    constructor(public dynamicNodeConfig: DynamicNodeConfig) { super(dynamicNodeConfig); }\r\n\r\n    bindEvents(events: { [key: string]: any },isSubscribe:boolean) {\r\n        Object.keys(events).forEach(eventName => {\r\n            switch (eventName) {\r\n                case FOCUS:\r\n                    this.setFocus(this.getValue(events[eventName]));\r\n                    break;\r\n                case SELECT:\r\n                case INPUT:\r\n                    this.setInput();\r\n                    break;\r\n                case BLUR:\r\n                    this.setBlur();\r\n                    break;\r\n                case CLICK:\r\n                    this.setClick(this.getValue(events[eventName]));\r\n                    break;\r\n            }\r\n            if (isSubscribe && this.isSubscribeProp(events[eventName]))\r\n                this.setPropSubscription(this.getPropName(events[eventName]), EVENTS, eventName);\r\n        })\r\n    }\r\n\r\n    setClick(functionName:string) {\r\n        this.element.onclick = () => {\r\n            if (this.controlConfig[functionName])\r\n                this.controlConfig[functionName].call(this.controlConfig);\r\n        }\r\n    }\r\n\r\n    setFocus(value: boolean) {\r\n        if (value && this.element.focus) \r\n            setTimeout(t => { this.element.focus()} , 1000);\r\n    }\r\n\r\n    setBlur() {\r\n        let listen = this.dynamicNodeConfig.renderer.listen(this.element, BLUR, () => {\r\n            this.dynamicNodeConfig.controlConfig.formControl.markAsTouched();\r\n        })\r\n        this.eventListeners.push(listen);\r\n    }\r\n\r\n    setInput() {\r\n        let listen = this.dynamicNodeConfig.renderer.listen(this.element, INPUT, (v) => {\r\n            let isPassed = true;\r\n            if (this.controlConfig.hooks && this.controlConfig.hooks.preValue) {\r\n                isPassed = this.controlConfig.hooks.preValue.call(this.controlConfig,v.target.value);\r\n                if (!isPassed) {\r\n                    this.controlConfig.formControl.patchValue(this.controlConfig.formControl.value);\r\n                    this.resetElementValue(this.controlConfig.formControl.value);\r\n                }\r\n            }\r\n            if (isPassed) {\r\n                this.setControlConfigValue(v.target);\r\n                if (this.controlConfig.hooks && this.controlConfig.hooks.postValue)\r\n                    this.controlConfig.hooks.postValue.call(this.controlConfig);\r\n                this.controlConfig.formControl.markAsDirty();\r\n            }\r\n            if (this.conditionalValidator)\r\n                this.conditionalValidator(this.controlConfig.formControl);\r\n        })\r\n        this.eventListeners.push(listen);\r\n        setTimeout(() => {\r\n            if (this.controlConfig.formControl[CONDITIONAL_VALIDATOR]) {\r\n                this.conditionalValidator = this.controlConfig.formControl[CONDITIONAL_VALIDATOR];\r\n                delete this.controlConfig.formControl[CONDITIONAL_VALIDATOR];\r\n            }\r\n        },50)\r\n        \r\n\r\n    }\r\n\r\n\r\n    \r\n}","import { DynamicNodeConfig } from \"../../models/interface/dynamic-node-config\";\r\nimport { BaseObjectAccessor } from './base-object-accessor';\r\nimport { CHECKBOX, SELECT_MULTIPLE, RADIO, FILE } from '../../const/app.const'\r\nimport { ControlState } from '../../statics/control-state';\r\nimport { dynamicContainer } from \"../../core/dynamicContainer\";\r\nimport { ComponentView } from \"../component-viewer/component-view\";\r\n\r\nexport abstract class ElementAccessor extends BaseObjectAccessor{\r\n    element: any;\r\n    protected componentView: any;\r\n\r\n    constructor(dynamicNodeConfig: DynamicNodeConfig) {\r\n        super(dynamicNodeConfig)\r\n    }\r\n\r\n    createNodeElement(parentElement: any, name: string) {\r\n        this.element = name.startsWith(\"#\") ? this.createComponentView(this.dynamicNodeConfig.controlConfig) : this.dynamicNodeConfig.renderer.createElement(name);\r\n        this.dynamicNodeConfig.renderer.appendChild(parentElement, this.element);\r\n    }\r\n\r\n    private createComponentView(controlConfig: any) {\r\n        let container = dynamicContainer.getComponent(controlConfig.config.type.replace(\"#\", \"\"));\r\n        if (container) {\r\n            this.componentView = new ComponentView(container.instance, this.dynamicNodeConfig.viewContainerRef, this.dynamicNodeConfig.componentFactoryResolver, controlConfig, this.dynamicNodeConfig.dynamicFormBuildConfig);\r\n            this.componentView.create();\r\n            return this.componentView.rootNode();\r\n        }\r\n    }\r\n\r\n\r\n    removeChildren(element: any) {\r\n        if (element.firstElementChild) {\r\n            this.removeChildren(element.firstElementChild);\r\n        }\r\n        let controlId = element.getAttribute(\"data-rxwebid\");\r\n        if (controlId && ControlState.controls[controlId]) {\r\n            ControlState.controls[controlId].destroy();\r\n            delete ControlState.controls[controlId];\r\n        }\r\n    }\r\n   \r\n\r\n    setControlConfigValue(targetElement) {\r\n        let value = targetElement.value === \"\" ? null : targetElement.value;\r\n        switch (targetElement.type) {\r\n            case FILE:\r\n                this.controlConfig.formControl.setValue(targetElement.files)\r\n                this.controlConfig.value = targetElement.files;\r\n                break;\r\n            case CHECKBOX:\r\n                this.setCheckboxValue(targetElement);\r\n                break;\r\n            case SELECT_MULTIPLE:\r\n                let values = [];\r\n                for (let option of this.element.options)\r\n                    if (option.selected && option.value)\r\n                        values.push(option.value);\r\n                this.controlConfig.value = values;\r\n                break;\r\n            default:\r\n                this.controlConfig.formControl.setValue(value);\r\n                this.controlConfig.value = value;\r\n                break;\r\n        }\r\n    }\r\n\r\n    resetElementValue(value: any) {\r\n        switch (this.element.type) {\r\n            case CHECKBOX:\r\n            case RADIO:\r\n                var elements:any = document.querySelectorAll(`[name='${this.controlConfig.config.name}']`);\r\n                for (var i = 0; i < elements.length; i++) {\r\n                    elements[i].checked = this.element.type == CHECKBOX ? this.checkedCheckbox(value, elements[i]) : this.checkedRadio(value, elements[i]);\r\n                }\r\n                break;\r\n            case SELECT_MULTIPLE:\r\n                for (let option of this.element.options) {\r\n                    option.selected = (value) ? value.filter(t => t == option.value)[0] != undefined : false;\r\n                }\r\n                break;\r\n            default:\r\n                this.element.value = value;\r\n        }\r\n    }\r\n\r\n    private checkedCheckbox = (value, element) => (value) ? (this.controlConfig.config.multiselect) ? value.filter(t => element.value == t)[0] != undefined : element.value == value : false;\r\n\r\n    private checkedRadio = (value, element) => (value) ? value == element.value : false;\r\n\r\n    private setCheckboxValue(targetElement) {\r\n        let value = (this.controlConfig.config.multiselect) ? this.controlConfig.value || [] : targetElement.value;\r\n        if (targetElement.checked)\r\n            (this.controlConfig.config.multiselect) ? value.push(targetElement.value) : null;\r\n        else\r\n            (this.controlConfig.config.multiselect) ? value.splice(value.indexOf(targetElement.value), 1) : value = null;\r\n        this.controlConfig.formControl.setValue(value);\r\n        this.controlConfig.value = value;\r\n    }\r\n}","import { SOURCE, SELECT, ADDITIONAL_CLASS, PROP, ATTR, EVENTS, INPUT, TEXTAREA, READONLY } from '../../const/app.const';\r\nimport { ControlState } from '../../statics/control-state';\r\nimport { OverrideObjectProp } from \"./override-object-prop\";\r\nimport { DynamicNodeConfig } from \"../../models/interface/dynamic-node-config\";\r\n\r\nexport class DomManipulation extends OverrideObjectProp {\r\n    isComponentView: boolean = false;\r\n    subscribers: string[] = [];\r\n    elementIndex: number = 0;\r\n    commentNode: any;\r\n    nodeName: string;\r\n    domConfig: { [key: string]: any };\r\n    element: any;\r\n    eventListeners: any[] = [];\r\n    controlId: number;\r\n    private actionListeners: { [key: string]: any } = {};\r\n    private elementClasses: any[] = [];\r\n\r\n    constructor(parentNode: any, elementName: string, dynamicNodeConfig: DynamicNodeConfig) {\r\n        super(dynamicNodeConfig);\r\n        this.nodeName = elementName;\r\n        super.createNodeElement(parentNode, elementName);\r\n        this.bindAdditionalClasses();\r\n        this.controlId = ControlState.controlId = ControlState.controlId + 1;\r\n        ControlState.controls[this.controlId] = this;\r\n        this.addOrRemoveAttribute(\"data-rxwebid\", this.controlId,false);\r\n    }\r\n\r\n    parseObject(jObject: { [key: string]: any }, isSubscribe: boolean) {\r\n        this.domConfig = jObject;\r\n        this.process(jObject, isSubscribe)\r\n        this.overrideProp(isSubscribe);\r\n        this.subscribeValueChange();\r\n    }\r\n\r\n    private subscribeValueChange() {\r\n        if (Object.keys(this.subscribeProps).length > 0)\r\n            this.controlConfig.onPropValueChanged(this.controlId, this.subscribeProps, (x, y) => {\r\n                this.process(x, false)\r\n            })\r\n    }\r\n    process(jObject: { [key: string]: any }, isSubscribe: boolean) {\r\n        Object.keys(jObject).forEach(propName => {\r\n            switch (propName) {\r\n                case PROP:\r\n                    this.bindProp(jObject[propName], isSubscribe);\r\n                    break;\r\n                case ATTR:\r\n                    this.bindAttribute(jObject[propName], isSubscribe);\r\n                    break;\r\n                case EVENTS:\r\n                    this.bindEvents(jObject[propName], isSubscribe);\r\n                    break;\r\n                case SOURCE:\r\n                    if (!isSubscribe) {\r\n                        while (this.element.firstElementChild)\r\n                            this.removeChildren(this.element.firstElementChild);\r\n                        this.dynamicNodeConfig.controlConfigProcessor.createChildrens(this.dynamicNodeConfig.collections, this, this.controlConfig, this.dynamicNodeConfig.additionalClasses, false);\r\n                    } else\r\n                        this.setPropSubscription(SOURCE, SOURCE, SOURCE);\r\n                    break;\r\n            }\r\n        })\r\n    }\r\n    overrideProp(isSubscribe: boolean) {\r\n        switch (this.nodeName) {\r\n            case INPUT:\r\n            case SELECT:\r\n            case TEXTAREA:\r\n                if (this.domConfig.overrideProp == undefined || this.domConfig.overrideProp)\r\n                    this.overrideValueProp();\r\n                this.setPropSubscription(READONLY, ATTR, ADDITIONAL_CLASS, ADDITIONAL_CLASS)\r\n                if (this.controlConfig && this.controlConfig.config && this.controlConfig.config.additionalConfig) \r\n                    this.process(this.controlConfig.config.additionalConfig, isSubscribe);\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    bindAdditionalClasses() {\r\n        let additionalClasses = this.dynamicNodeConfig.additionalClasses;\r\n        if (additionalClasses && additionalClasses.class) {\r\n            this.setClass(additionalClasses.class, ADDITIONAL_CLASS);\r\n            if (additionalClasses.listenerProps)\r\n                additionalClasses.listenerProps.forEach(t => this.setPropSubscription(t, ATTR, ADDITIONAL_CLASS, ADDITIONAL_CLASS))\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        let eventCount = this.eventListeners.length;\r\n        for (var i = 0; i < eventCount; i++) {\r\n            this.eventListeners[0]();\r\n            this.eventListeners.splice(0, 1);\r\n        }\r\n        this.eventListeners = [];\r\n        this.element.onClick = null;\r\n        if (this.componentView)\r\n            this.componentView.destroy();\r\n        else\r\n            this.element.parentElement.removeChild(this.element)\r\n        this.controlConfig.destroy(this.controlId);\r\n    }\r\n}\r\n\r\n","import { ElementPropsAccessor } from './element-props-accessor';\r\nimport { DynamicNodeConfig } from \"../../models/interface/dynamic-node-config\";\r\n\r\nconst VALUE: string = \"value\";\r\nexport abstract class OverrideObjectProp extends ElementPropsAccessor {\r\n\r\n    \r\n\r\n    constructor(dynamicNodeConfig: DynamicNodeConfig) { super(dynamicNodeConfig); }\r\n\r\n    overrideValueProp() {\r\n        let descriptor = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(this.controlConfig), VALUE);\r\n        let value = this.controlConfig.value;\r\n        let oldValue = null;\r\n        Object.defineProperty(this.controlConfig, VALUE, {\r\n            get: () => { return descriptor ? descriptor.get.call(this.controlConfig) : value },\r\n            set: (v) => {\r\n                value = v;\r\n                if (this.controlConfig.formControl.value != v) {\r\n                    this.controlConfig.formControl.setValue(v);\r\n                    this.resetElementValue(v)\r\n                    this.controlConfig.value = v\r\n                } else {\r\n                    this.controlConfig.notifyValueChanged(VALUE, v, oldValue);\r\n                    if (descriptor)\r\n                        descriptor.set.call(this.controlConfig, v);\r\n                    this.controlConfig.refresh();\r\n                }\r\n                this.controlConfig.config.value = v;\r\n                oldValue = v;\r\n            }\r\n        })\r\n        this.overrideFormControlProp();\r\n        if (this.controlConfig.formControl.value)\r\n            setTimeout(() => { this.resetElementValue(this.controlConfig.formControl.value); }, 50)\r\n    }\r\n\r\n    private overrideFormControlProp() {\r\n        let value = this.controlConfig.formControl.value;\r\n        Object.defineProperty(this.controlConfig.formControl, VALUE, {\r\n            get: () => { return value },\r\n            set: (v) => {\r\n                value = v;\r\n                var t = setTimeout(() => {\r\n                    if (value != this.controlConfig.value) {\r\n                        this.controlConfig.value = value;\r\n                        this.resetElementValue(value);\r\n                    }\r\n                }, 50)\r\n            }\r\n        })\r\n    }\r\n}","import { Input, ComponentFactoryResolver, ViewContainerRef } from \"@angular/core\";\r\nimport { FormControlConfig, ControlConfig } from \"../services/form-control-config\"\r\nimport { DynamicFormBuildConfig } from \"../models/interface/dynamic-form-build-config\";\r\nimport { DYNAMIC_ELEMENT_DESIGN_TREE } from '../const/dynamic-element-design-tree.const';\r\nimport { BOOTSTRAP_DESIGN_CONFIG } from '../const/bootstrap-design-config.const';\r\nimport { DomManipulation } from '../domain/dom/dom-manipulation'\r\nimport { ApplicationUtil } from '../util/application-util';\r\nimport { objectPropValue } from '../functions/object-prop-value.function';\r\n\r\nimport { INLINE,PREPEND_BOTH, PREPEND_LEFT, PREPEND_RIGHT, INPUT_TEXT,SQUARE_ERROR, SQUARE_SMALL, SQUARE_LABEL,SQUARE_CONTROL,ADVANCE, INPUT, TEXT, RANGE, FILE, STRING, CONTROL } from '../const/app.const';\r\nimport { DynamicNodeConfig } from \"../models/interface/dynamic-node-config\";\r\n\r\nexport class ControlConfigProcessor {\r\n    isBuild: boolean = false;\r\n    _viewMode: any;\r\n    @Input('rxwebDynamicForm') dynamicFormBuildConfig: DynamicFormBuildConfig;\r\n\r\n    @Input() set viewMode(value: string) {\r\n        this._viewMode = value;\r\n        if (this.isBuild)\r\n            this.build();\r\n    }\r\n\r\n    get viewMode(): string {\r\n        return this._viewMode;\r\n    }\r\n\r\n    get currentViewMode(): any {\r\n        return DYNAMIC_ELEMENT_DESIGN_TREE.viewMode[this.viewMode];\r\n    }\r\n\r\n    getView(name: string, controlConfig: FormControlConfig) {\r\n        if (this.viewMode == INLINE)\r\n            name = this.getName(name,controlConfig,true);\r\n        return DYNAMIC_ELEMENT_DESIGN_TREE[name];\r\n    }\r\n\r\n    get viewClassPath(): any {\r\n        return BOOTSTRAP_DESIGN_CONFIG.elementClassPath.viewMode[this.viewMode];\r\n    }\r\n\r\n    @Input() uiBindings: any[];\r\n\r\n    constructor(protected element: Node, private renderer, private componentFactoryResolver: ComponentFactoryResolver, private viewContainerRef: ViewContainerRef) { }\r\n\r\n\r\n    build() {\r\n        this.uiBindings.forEach(controlConfigName => {\r\n            this.designForm(controlConfigName, this.element, this.currentViewMode[0], this.currentViewMode[1], BOOTSTRAP_DESIGN_CONFIG.elementClassPath.viewMode[this.viewMode]);\r\n        })\r\n    }\r\n\r\n    designForm(controlConfigName, element, viewRoot, viewChild, classPath: any, childrenControlConfig?: FormControlConfig) {\r\n        let controlConfig = childrenControlConfig || this.getControlConfig(controlConfigName);\r\n        if (controlConfig) {\r\n            if (this.viewMode != INLINE && controlConfig && !controlConfig.config.skipDefaultView)\r\n                this.createElement(viewRoot, viewChild, element, controlConfig, classPath);\r\n            else {\r\n                let currentView = this.getView(controlConfig.config.type, controlConfig);\r\n                if (currentView)\r\n                    this.createElement(currentView[0], currentView[1], element, controlConfig, this.getClassPath(controlConfig.config.type, controlConfig, this._viewMode == INLINE));\r\n                else\r\n                    this.createDomManipulation(controlConfig.config.type, [], element, controlConfig, [], true)\r\n            }\r\n        } else if (this.viewMode == ADVANCE && Array.isArray(controlConfigName)) {\r\n            let config: any = new ControlConfig({ }, {});\r\n            let domManipulation = this.createElement(this.currentViewMode[0], [], element, config, BOOTSTRAP_DESIGN_CONFIG.elementClassPath.viewMode[this.viewMode])\r\n            controlConfigName.forEach(t => {\r\n                this.designForm(t, domManipulation.element, this.currentViewMode[1][0], this.currentViewMode[1][1], BOOTSTRAP_DESIGN_CONFIG.elementClassPath.viewMode[this.viewMode].child[\"0\"])\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    createElement(elementName: string, collections: any[], parentElement: any, controlConfig: FormControlConfig, elementClassPath: any) {\r\n        if (!elementName.startsWith(\"#\")) {\r\n            elementClassPath = elementClassPath ? elementClassPath : {};\r\n            let domManipulation = this.createDomManipulation(elementName, collections, parentElement, controlConfig, elementClassPath);\r\n            this.createChildrens(collections, domManipulation, controlConfig, elementClassPath)\r\n            if (controlConfig.config && controlConfig.config.childrens && controlConfig.config.childrens.length > 0) {\r\n                controlConfig.config.childrens.forEach((t, i) => {\r\n                    let childrenControlConfig = undefined;\r\n                    if (!(typeof t == STRING) && !Array.isArray(t))\r\n                        childrenControlConfig = new ControlConfig({ ...t, ...{ skipDefaultView: true } }, {});\r\n                    this.designForm(t, domManipulation.element, this.currentViewMode[0], this.currentViewMode[1], BOOTSTRAP_DESIGN_CONFIG.elementClassPath.viewMode[this.viewMode], childrenControlConfig);\r\n                })\r\n            }\r\n            return domManipulation;\r\n        } else\r\n            this.createDomManipulation(elementName, collections, parentElement, controlConfig, elementClassPath,true);//this.createComponentView(controlConfig, parentElement);\r\n    }\r\n\r\n    private createDomManipulation(elementName: string, collections: any[], parentElement: any, controlConfig: FormControlConfig, elementClassPath: any, isComponentView: boolean = false) {\r\n        let dynamicNodeConfig: DynamicNodeConfig = {\r\n            controlConfig: controlConfig, additionalClasses: elementClassPath, renderer: this.renderer, collections: collections, controlConfigProcessor: this,\r\n            viewContainerRef: isComponentView ? this.viewContainerRef : undefined,\r\n            componentFactoryResolver: isComponentView ? this.componentFactoryResolver : undefined,\r\n            dynamicFormBuildConfig: this.dynamicFormBuildConfig\r\n        }\r\n        return new DomManipulation(parentElement, elementName, dynamicNodeConfig);\r\n    }\r\n\r\n    createChildrens(collections, domManipulation, controlConfig, elementClassPath,isSubscribe:boolean = true) {\r\n        let elementCount = 0;\r\n        let childElementsClassConfig = elementClassPath.child ? elementClassPath.child : {};\r\n        for (var i = 0; i < collections.length; i++) {\r\n            let collection = collections[i];\r\n            if (!ApplicationUtil.isObject(collection)) {\r\n                if (this.isCreateElement(collections[i], controlConfig)) {\r\n                    if (collection == SQUARE_CONTROL && controlConfig.config.type == undefined && controlConfig.config.childControlConfigs) {\r\n                        controlConfig.config.childControlConfigs.forEach(x => {\r\n                            let childControlConfig = this.getControlConfig(x);\r\n                            this.createChildNodes(collections, childControlConfig, childElementsClassConfig, elementCount, i, domManipulation);\r\n                        })\r\n                    } else {\r\n                        if (collection == SQUARE_CONTROL && controlConfig.config.type.startsWith(\"#\"))\r\n                            this.createDomManipulation(controlConfig.config.type, [], domManipulation.element, controlConfig,[],true)\r\n                        else {\r\n                            let isIncrease = this.createChildNodes(collections, controlConfig, childElementsClassConfig, elementCount, i, domManipulation);\r\n                            if (isIncrease)\r\n                                i = i + 1;\r\n                        }\r\n                    }\r\n                }\r\n                elementCount++;\r\n            } else {\r\n                if (collection.for)\r\n                    this.runForCollection(collection, domManipulation, controlConfig, elementClassPath);\r\n                if (isSubscribe)\r\n                domManipulation.parseObject(collections[i], isSubscribe);\r\n            }\r\n        }\r\n    }\r\n\r\n    private createChildNodes(collections, controlConfig, childElementsClassConfig, elementCount, i, domManipulation) {\r\n        let isNextCollection: boolean = false;\r\n        let nextCollection = this.getCollection(collections[i], controlConfig);\r\n        let childClasses = this.getAdditionalClasses(collections[i], childElementsClassConfig, elementCount, controlConfig);\r\n        if (!nextCollection) {\r\n            nextCollection = [collections[i], collections[i + 1]];\r\n            isNextCollection = true;\r\n        }\r\n        this.createElement(nextCollection[0], nextCollection[1], domManipulation.element, controlConfig, childClasses);\r\n        return isNextCollection;\r\n    }\r\n    private runForCollection(collection: any, domManipulation, controlConfig, elementClassPath) {\r\n        Object.keys(collection.for).forEach(t => {\r\n            let source = objectPropValue(t, controlConfig);\r\n            source.forEach((x, index) => {\r\n                let item = collection.for[t].call(controlConfig, x, index);\r\n                this.createChildrens(item, domManipulation, controlConfig, elementClassPath);\r\n            })\r\n\r\n        })\r\n    }\r\n\r\n    private getAdditionalClasses(name: string, childClasses: { [key: string]: any }, index: number, controlConfig: FormControlConfig) {\r\n        name = this.getName(name, controlConfig)\r\n        let additionalClasses = BOOTSTRAP_DESIGN_CONFIG.elementClassPath[name];\r\n        let childrenClasses = childClasses[index] ? childClasses[index] : {\r\n            class: []\r\n        };\r\n        if (additionalClasses) {\r\n            if (childrenClasses.class)\r\n                additionalClasses = { class: additionalClasses.class.concat(childrenClasses.class), listenerProps: additionalClasses.listenerProps, child: additionalClasses.child }\r\n            return additionalClasses\r\n        }\r\n\r\n        return childrenClasses;\r\n    }\r\n\r\n    private getCollection(name: string,controlConfig: FormControlConfig) {\r\n        if (name[0] == \"[\") {\r\n            name = this.getName(name, controlConfig);\r\n            return DYNAMIC_ELEMENT_DESIGN_TREE[name];\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    private getControlName(name: string) {\r\n        let controlName: string = '';\r\n        switch (name) {\r\n            case \"number\":\r\n            case \"color\":\r\n            case \"date\":\r\n            case \"email\":\r\n            case \"password\":\r\n            case \"tel\":\r\n            case \"time\":\r\n            case \"url\":\r\n            case \"color\":\r\n            case RANGE:\r\n            case FILE:\r\n            case TEXT:\r\n                controlName = INPUT;\r\n                break;\r\n            default:\r\n                controlName = name;\r\n\r\n        }\r\n        return controlName;\r\n    }\r\n\r\n    private getControlConfig(name: string) {\r\n        return this.dynamicFormBuildConfig.controlsConfig[name];\r\n    }\r\n\r\n    private getName(name: string, controlConfig: FormControlConfig,isInline:boolean = false) {\r\n        name = name.replace(new RegExp(/\\[/g), '').replace(new RegExp(/\\]/g), '');\r\n        name = (name == CONTROL || isInline) ? this.getControlName(controlConfig.config.type) : name;\r\n        switch (name) {\r\n            case INPUT:\r\n                name = this.prependControl(name,controlConfig);\r\n                break;\r\n            case INPUT_TEXT:\r\n                name = INPUT;\r\n                break;\r\n        }\r\n        return name;\r\n    }\r\n\r\n    private prependControl(name: string, controlConfig: FormControlConfig) {\r\n        if (controlConfig.config.ui && controlConfig.config.ui.prependText && controlConfig.config.ui.prependText.right && controlConfig.config.ui.prependText.left)\r\n            name = PREPEND_BOTH;\r\n        else if (name == INPUT && controlConfig.config.ui && controlConfig.config.ui.prependText && controlConfig.config.ui.prependText.left)\r\n            name = PREPEND_LEFT;\r\n        else if (name == INPUT && controlConfig.config.ui && controlConfig.config.ui.prependText && controlConfig.config.ui.prependText.right)\r\n            name = PREPEND_RIGHT;\r\n        return name;\r\n    }\r\n\r\n    private isCreateElement(collection: any, controlConfig: FormControlConfig) {\r\n        let isCreate = true;\r\n        switch (collection) {\r\n            case \"[img]\":\r\n                isCreate = controlConfig.img != undefined;\r\n            case SQUARE_LABEL:\r\n                isCreate = controlConfig.label != undefined;\r\n                break;\r\n            case SQUARE_SMALL:\r\n                isCreate = controlConfig.description != undefined;\r\n                break;\r\n            case SQUARE_ERROR:\r\n                isCreate = controlConfig.formControl != undefined && (controlConfig.formControl.validator != undefined || controlConfig.formControl.asyncValidator != undefined) ;\r\n                break;\r\n        }\r\n        return isCreate;\r\n    }\r\n\r\n    private getClassPath(name: string,controlConfig:FormControlConfig,isInline:boolean) {\r\n        if (this.viewMode == INLINE)\r\n            name = this.getName(name,controlConfig,isInline);\r\n        return BOOTSTRAP_DESIGN_CONFIG.elementClassPath[name];\r\n    }\r\n}","import { Renderer2, ElementRef, OnInit, Directive, OnDestroy, ComponentFactoryResolver, ViewContainerRef } from '@angular/core'\r\nimport { ControlConfigProcessor } from '../form-designer/control-config-processor';\r\nimport { ControlState } from '../statics/control-state';\r\n\r\n@Directive({\r\n    selector: '[rxwebDynamicForm]'\r\n})\r\nexport class RxDynamicFormDirective extends ControlConfigProcessor implements OnInit, OnDestroy {\r\n\r\n\r\n    constructor(elementRef: ElementRef, renderer: Renderer2, componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef) {\r\n        super(elementRef.nativeElement as Node, renderer, componentFactoryResolver, viewContainerRef);\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n        this.build();\r\n    }\r\n\r\n    removeChildren(element: any) {\r\n        while (element.firstElementChild)\r\n            this.removeChildren(element.firstElementChild);\r\n\r\n        let controlId = element.getAttribute(\"data-rxwebid\");\r\n        if (controlId && ControlState.controls[controlId]) {\r\n            ControlState.controls[controlId].destroy();\r\n            delete ControlState.controls[controlId];\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.element)\r\n            this.removeChildren(this.element);\r\n\r\n    }\r\n}","import { NgModule, ModuleWithProviders } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\"\r\nimport { RxDynamicFormDirective } from '../directives/rxweb-bootstrap-form.directive'\r\nimport { RxDynamicFormBuilder } from \"../services/dynamic-form-builder\"\r\n@NgModule({\r\n    declarations: [RxDynamicFormDirective],\r\n    imports: [CommonModule],\r\n    providers: [RxDynamicFormBuilder],\r\n    exports: [RxDynamicFormDirective]\r\n})\r\nexport class RxReactiveDynamicFormsModule {\r\n    static forRoot(): ModuleWithProviders { return { ngModule: RxReactiveDynamicFormsModule, providers: [] }; }\r\n}\r\n","import { FormControlConfig } from \"../services/form-control-config\";\r\nimport { DynamicFormBuildConfig } from \"./interface/dynamic-form-build-config\";\r\nimport { Input } from \"@angular/core\";\r\n\r\nexport abstract class AbstractControlConfig {\r\n    private _controlConfig: FormControlConfig;\r\n    private _dynamicFormBuildConfig: DynamicFormBuildConfig;\r\n\r\n    @Input() set controlConfig(value: FormControlConfig) {\r\n        this._controlConfig = value;\r\n    }\r\n    get controlConfig() {\r\n        return this._controlConfig;\r\n    }\r\n    @Input() set dynamicFormBuildConfig(value: DynamicFormBuildConfig) {\r\n        this._dynamicFormBuildConfig = value;\r\n    }\r\n\r\n    get dynamicFormBuildConfig() {\r\n        return this._dynamicFormBuildConfig;\r\n    }\r\n\r\n    addItem() {\r\n        this.dynamicFormBuildConfig.controlsConfig[this.controlConfig.config.controlConfigName][\"addItem\"]();\r\n    }\r\n\r\n    removeItem(index: number) {\r\n        this.dynamicFormBuildConfig.controlsConfig[this.controlConfig.config.controlConfigName][\"removeItem\"](index);\r\n    }\r\n}","import { dynamicContainer } from '../core/dynamicContainer';\r\n\r\nexport function dynamicComponent(name:string) {\r\n    return function (\r\n        target: Object\r\n    ) {\r\n        dynamicContainer.registerComponent(name, target)\r\n    } \r\n}\r\n\r\n","import { dynamicContainer } from '../core/dynamicContainer';\r\nimport { OverrideConfigProp } from \"../models/interface/override-config-prop\"\r\n\r\nexport function overrideProps(props:{[key:string]:OverrideConfigProp}) {\r\n    return function (\r\n        target: Object\r\n    ) {\r\n        dynamicContainer.registerOverrideProp(props)\r\n    } \r\n}\r\n\r\n"]}