{"version":3,"file":"rxweb-reactive-dynamic-forms.js","sources":["ng://@rxweb/reactive-dynamic-forms/util/is-not-matched.ts","ng://@rxweb/reactive-dynamic-forms/services/value-change-notification.ts","ng://@rxweb/reactive-dynamic-forms/services/prop-descriptor.ts","ng://@rxweb/reactive-dynamic-forms/const/app.const.ts","ng://@rxweb/reactive-dynamic-forms/util/linq.ts","ng://@rxweb/reactive-dynamic-forms/statics/control-state.ts","ng://@rxweb/reactive-dynamic-forms/services/base-form-control-config.ts","ng://@rxweb/reactive-dynamic-forms/core/dynamicContainer.ts","ng://@rxweb/reactive-dynamic-forms/services/form-control-config.ts","ng://@rxweb/reactive-dynamic-forms/functions/get-instance.function.ts","ng://@rxweb/reactive-dynamic-forms/util/application-util.ts","ng://@rxweb/reactive-dynamic-forms/services/dynamic-form-builder.ts","ng://@rxweb/reactive-dynamic-forms/const/dynamic-element-design-tree.const.ts","ng://@rxweb/reactive-dynamic-forms/const/bootstrap-design-config.const.ts","ng://@rxweb/reactive-dynamic-forms/functions/object-prop-value.function.ts","ng://@rxweb/reactive-dynamic-forms/domain/dom/base-object-accessor.ts","ng://@rxweb/reactive-dynamic-forms/domain/component-viewer/component-view.ts","ng://@rxweb/reactive-dynamic-forms/domain/dom/element-accessor.ts","ng://@rxweb/reactive-dynamic-forms/domain/dom/element-event-processor.ts","ng://@rxweb/reactive-dynamic-forms/domain/dom/element-props-accessor.ts","ng://@rxweb/reactive-dynamic-forms/domain/dom/override-object-prop.ts","ng://@rxweb/reactive-dynamic-forms/domain/dom/dom-manipulation.ts","ng://@rxweb/reactive-dynamic-forms/form-designer/control-config-processor.ts","ng://@rxweb/reactive-dynamic-forms/directives/rxweb-bootstrap-form.directive.ts","ng://@rxweb/reactive-dynamic-forms/modules/dynamic-form-module.ts","ng://@rxweb/reactive-dynamic-forms/decorators/dynamic-component.decorator.ts","ng://@rxweb/reactive-dynamic-forms/decorators/override-prop.decorator.ts","ng://@rxweb/reactive-dynamic-forms/models/abstract-form-control-config.ts"],"sourcesContent":["export function isNotMatched(jsonObject: { [key: string]: any }, compareObject: { [key: string]: any }) {\r\n    let isModified: boolean = false;\r\n    for (var columnName in compareObject) {\r\n            if (Array.isArray(jsonObject[columnName])) {\r\n                for (var i = 0; i < jsonObject[columnName].length; i++) {\r\n                    isModified = isNotMatched(jsonObject[columnName][i], compareObject[columnName][i])\r\n                }\r\n            } else if (typeof jsonObject[columnName] == \"object\")\r\n                isModified = isNotMatched(jsonObject[columnName], compareObject[columnName]);\r\n            else\r\n                isModified = !(jsonObject[columnName] == compareObject[columnName]);\r\n            if (isModified)\r\n                break;\r\n    }\r\n        return isModified;\r\n}","import { isNotMatched } from \"../util/is-not-matched\";\r\n\r\nexport class ValueChangeNotification {\r\n    private attributeChangeSubscriptions: Array<any> = new Array<any>();\r\n\r\n    onPropValueChanged(controlId: number, subscription: { [key: string]: any }, func: Function) {\r\n        this.attributeChangeSubscriptions.push({ controlId: controlId, names: subscription.names, props: subscription.props, func: func });\r\n    }\r\n\r\n\r\n    notifyValueChanged(name, value, oldValue, isProps: boolean = false) {\r\n        if ((!isProps && this.isNotEqual(oldValue, value)) && this.onPropValueChanged) {\r\n            let subscriptions = this.attributeChangeSubscriptions.filter(t => t.names.indexOf(name) != -1);\r\n            subscriptions.forEach(subscribe => {\r\n                if (subscribe.props && subscribe.props[name])\r\n                    subscribe.func(subscribe.props[name])\r\n            });\r\n        }\r\n    }\r\n\r\n    private isNotEqual(leftValue: any, rightValue: any) {\r\n        if (Array.isArray(leftValue) && Array.isArray(rightValue)) {\r\n            let isNotEqual = leftValue.length != rightValue.length;\r\n            if (!isNotEqual)\r\n                for (var i = 0; i < leftValue.length; i++) {\r\n                    isNotEqual = isNotMatched(leftValue[i], rightValue[i]);\r\n                    if (isNotEqual)\r\n                        break;\r\n                }\r\n            return isNotEqual;\r\n        }\r\n        return leftValue != rightValue;\r\n    }\r\n\r\n    destroy(controlId: number) {\r\n        for (var i = 0; i < this.attributeChangeSubscriptions.length; i++) {\r\n            if (this.attributeChangeSubscriptions[i].controlId == controlId) {\r\n                this.attributeChangeSubscriptions.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}","import { ValueChangeNotification } from \"./value-change-notification\";\r\nimport { OverrideConfigProp } from \"../models/interface/override-config-prop\";\r\n\r\nconst FILTER: string = \"filter\";\r\nconst FUNCTION: string = \"function\";\r\nconst ERRORS: string = \"errors\";\r\nexport class PropDescriptor extends ValueChangeNotification{\r\n    protected isDefinedFilter: boolean;\r\n\r\n    props: { [key: string]: any };\r\n\r\n    protected checkFilterFunction() {\r\n        let descriptor = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(this), FILTER);\r\n        this.isDefinedFilter = (descriptor && !descriptor.get && !descriptor.set && typeof this[FILTER] == FUNCTION);\r\n    }\r\n\r\n   \r\n    overrideProp(props:OverrideConfigProp){\r\n        Object.keys(props).forEach(t=>{\r\n            Object.defineProperty(this,t,props[t]);    \r\n        })\r\n\r\n    }\r\n\r\n    defineProp(propName: string) {\r\n        let value = this.props[propName];\r\n        let oldValue = null;\r\n        Object.defineProperty(this.props, propName,\r\n            {\r\n                get: () => { return value },\r\n                set: (v) => {\r\n                    value = v;\r\n                    this.notifyValueChanged(`props.${propName}`, value, oldValue, false);\r\n                    oldValue = value;\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    protected overrideProps() {\r\n        [\"disabled\", \"label\", \"placeholder\", \"hide\", \"description\", \"focus\", \"readonly\", \"class\", \"source\"].forEach(t => {\r\n           let descriptor = this.getDescriptor(t);\r\n            let value = null;\r\n            let oldValue = null;\r\n            Object.defineProperty(this, t, {\r\n                get: () => { return descriptor ? descriptor.get.call(this) : value; },\r\n                set: (v) => {\r\n                    value = v;\r\n                    if (descriptor && descriptor.set)\r\n                        descriptor.set.call(this, v);\r\n                    super.notifyValueChanged(t, value, oldValue);\r\n                    oldValue = v;\r\n                }\r\n            });\r\n        })\r\n    }\r\n\r\n\r\n    protected overrideErrorsProp(formControl: any) {\r\n        let value = formControl.errors;\r\n        let errorMessage = '';\r\n        let oldValue = formControl.errorMessage;\r\n        Object.defineProperty(formControl, ERRORS,\r\n            {\r\n                get: () => { return value },\r\n                set: (v) => {\r\n                    value = v;\r\n                    errorMessage = formControl.errorMessage;\r\n                    this.notifyValueChanged(`errorMessage`, errorMessage || \"\", oldValue);\r\n                    oldValue = formControl.errorMessage;\r\n                }\r\n            })\r\n        formControl[ERRORS] = formControl[ERRORS];\r\n    }\r\n\r\n    protected getDescriptor(propName:string){\r\n\r\n        let descriptor = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(this), propName);\r\n        if(!descriptor)\r\n            descriptor = Object.getOwnPropertyDescriptor(this, propName);\r\n            return descriptor;\r\n    }\r\n\r\n\r\n\r\n}","export const FILE : string = 'file';\r\n\r\nexport const RANGE:string = 'range';\r\n\r\nexport const CHECKBOX:string = 'checkbox';\r\n\r\nexport const BLANK: string = \"\";\r\n\r\nexport const HIDE: string = \"hide\";\r\n\r\nexport const PROP: string = \"prop\";\r\n\r\nexport const ATTR: string = \"attr\";\r\n\r\nexport const EVENTS: string = \"events\";\r\n\r\nexport const FOCUS: string = \"focus\";\r\n\r\nexport const DESCRIPTION: string = \"description\";\r\n\r\nexport const LABEL: string = \"label\";\r\n\r\nexport const READONLY: string = \"readonly\";\r\n\r\nexport const INNER_TEXT: string = \"innertext\";\r\n\r\nexport const CLASS: string = \"class\";\r\n\r\nexport const STYLE: string = \"style\";\r\n\r\nexport const RXWEB: string = \"rxweb-\";\r\n\r\nexport const RADIO: string = \"radio\";\r\n\r\nexport const CHECKED: string = \"checked\";\r\n\r\nexport const STRING: string = \"string\";\r\n\r\nexport const FUNCTION: string = \"function\";\r\n\r\nexport const SQUARE: string = \"{\";\r\n\r\nexport const COLON: string = \":\";\r\n\r\nexport const CLICK: string = \"click\";\r\n\r\nexport const INPUT: string = \"input\";\r\n\r\nexport const TEXT:string = \"text\";\r\n\r\nexport const CONTROL: string = 'control';\r\n\r\nexport const BLUR: string = 'blur';\r\n\r\nexport const SELECT: string = \"select\";\r\n\r\nexport const TEXTAREA: string = \"textarea\";\r\n\r\nexport const BOOLEAN: string = \"boolean\";\r\n\r\nexport const NONE: string = \"none\";\r\n\r\nexport const DISPLAY: string = \"display\";\r\n\r\nexport const ADDITIONAL_CLASS: string = \"additional-class\";\r\n\r\nexport const SELECT_MULTIPLE: string = \"select-multiple\";\r\n\r\nexport const SOURCE: string = \"source\";\r\n\r\nexport const RXWEB_ID_STRING: string = \"string\";\r\n\r\nexport const ADVANCE: string = \"advance\";\r\n\r\nexport const SQUARE_CONTROL: string = \"[control]\";\r\n\r\nexport const SQUARE_LABEL: string = \"[label]\";\r\n\r\nexport const SQUARE_SMALL: string = \"[small]\";\r\n\r\nexport const SQUARE_ERROR: string = \"[error]\";\r\n\r\nexport const FILTER: string = \"filter\";\r\n\r\nexport const INPUT_TEXT: string = \"input-text\";\r\n\r\nexport const PREPEND_LEFT: string = \"prepend-left\";\r\n\r\nexport const PREPEND_RIGHT: string = \"prepend-right\";\r\n\r\nexport const PREPEND_BOTH: string = \"prepend-both\";\r\n\r\nexport const CONDITIONAL_VALIDATOR: string = \"conditionalValidator\"\r\n\r\nexport const INLINE = \"inline\";","export class Linq{\r\nprivate static extractArguments(splitTexts: string[]): string[] {\r\n        let expressionArguments: string[] = [\"this\"];\r\n        if (splitTexts && splitTexts[0])\r\n            splitTexts[0].split(\",\").forEach(t => expressionArguments.push(t.trim().replace(\"(\", \"\").replace(\")\", \"\")));\r\n        return expressionArguments;\r\n    }\r\n\r\n    static dynamicConfigParser(expressionString: string): any[] {\r\n        let controlNames = [];\r\n        let expressionArguments = Linq.extractArguments(expressionString.match(/\\(([^)]+)\\)/g));\r\n        let splitString: string[] = expressionString.replace(new RegExp(/\\r?\\n|\\r|;/g), ' ').replace(/[\"%()\\{}=\\\\?Â´`'#<>|,;:+-]+/g, \" \").split(/ /g);\r\n        if (expressionArguments.length > 3)\r\n            expressionArguments.splice(expressionArguments.length - 1, 1)\r\n        splitString.forEach((t, i) => {\r\n            if (t) {\r\n                if (t.includes(\"controlsConfig.\")) {\r\n                    let splitText = t.split(\"controlsConfig.\");\r\n                    if (splitText.length > 1)\r\n                        controlNames.push(splitText[1].split(\".\")[0]);\r\n                } else if (t.includes(\"controlsConfig[\")) \r\n                    controlNames.push(splitString[i+1]);\r\n            }\r\n        })\r\n        return controlNames;\r\n    }\r\n}\r\n\r\n","export  class ControlState {\r\n    static controlId: number = 1;\r\n\r\n    static controls: { [key: string]: any } = {};\r\n}\r\n\r\nexport class NotificationState {\r\n    static notificationId: number = 1;\r\n\r\n    static notifications: {\r\n        [key: string]: any\r\n    } = {};\r\n}","import { PropDescriptor } from './prop-descriptor'\r\nimport { FILTER, SOURCE } from '../const/app.const'\r\nimport { ActionResult } from \"../models/interface/action-config\"\r\nimport { Linq } from '../util/linq'\r\nimport { NotificationState } from '../statics/control-state';\r\nexport abstract class BaseFormControlConfig extends PropDescriptor {\r\n    config: { [key: string]: any };\r\n    source: any[];\r\n\r\n    constructor(private configs: { [key: string]: any }, private notificationId: number) {\r\n        super();\r\n\r\n    }\r\n\r\n    setNotification() {\r\n        if (NotificationState.notifications[this.notificationId])\r\n            if (!NotificationState.notifications[this.notificationId][this.config.name])\r\n                NotificationState.notifications[this.notificationId][this.config.name] =\r\n                    this.controlNotifications = { filter: [], disabled: [], label: [], description: [], hide: [], placeholder: [], readonly: [], focus: [], class: [] }\r\n            else\r\n                this.controlNotifications = NotificationState.notifications[this.notificationId][this.config.name];\r\n        this.complete();\r\n    }\r\n\r\n\r\n\r\n    complete() {\r\n        for (let action in this.controlNotifications) {\r\n            let descriptor = this.getDescriptor(action);\r\n            if ((descriptor && descriptor.get) || this.isDefinedFilter) {\r\n                let stringFunction = this.isDefinedFilter ? String(this[FILTER]) : String(descriptor.get);\r\n                let columnNames = Linq.dynamicConfigParser(stringFunction);\r\n                columnNames.forEach(column => {\r\n                    if (!NotificationState.notifications[this.notificationId][column])\r\n                        NotificationState.notifications[this.notificationId][column] = { filter: [], disabled: [], label: [], description: [], hide: [], placeholder: [], readonly: [], focus: [], class: [] }\r\n                    let controlNotifications = NotificationState.notifications[this.notificationId][column];\r\n                    controlNotifications[action].push(this.config.name)\r\n                })\r\n            }\r\n        }\r\n        this.overrideProps();\r\n        this.updateActionValue();\r\n    }\r\n\r\n    refresh(actionName?: string) {\r\n        for (var columnName in this.controlNotifications) {\r\n            if (this.controlNotifications[columnName].length > 0)\r\n                this.controlNotifications[columnName].forEach(x => {\r\n                    if (columnName == FILTER)\r\n                        this.configs[x].value = null;\r\n                    if (x != this.config.name)\r\n                        this.configs[x].refresh(columnName);\r\n                    else\r\n                        this.setActionValue(columnName);\r\n                })\r\n        }\r\n        if (actionName)\r\n            this.setActionValue(actionName);\r\n    }\r\n\r\n\r\n    private setActionValue(actionName: string) {\r\n        if (actionName == FILTER && this.isDefinedFilter) {\r\n            this[FILTER].call(this);\r\n        } else\r\n            this[actionName == FILTER ? SOURCE : actionName] = this[actionName];\r\n    }\r\n\r\n    private updateActionValue() {\r\n        [\"disabled\", \"label\",\"img\", \"placeholder\", \"hide\", \"description\", \"focus\", \"readonly\", \"class\", \"filter\", \"source\"].forEach(key => {\r\n            switch (key) {\r\n                case FILTER:\r\n                    if (this.isDefinedFilter && key == FILTER)\r\n                        this[FILTER]();\r\n                    if (this.config.filter)\r\n                        this[FILTER] = this.config.filter;\r\n                    break;\r\n                case SOURCE:\r\n                    if (this.config[key])\r\n                        this[key] = this.config[key];\r\n                    if (key == SOURCE && !this.source)\r\n                        this[key] = [];\r\n                    break;\r\n                default:\r\n                    if (this.config.ui && this.config.ui[key])\r\n                        this[key] = this.config.ui[key];\r\n                    else\r\n                        this[key == FILTER ? SOURCE : key] = this._actionResult[key];\r\n                    break;\r\n\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n\r\n    private _actionResult: ActionResult = {\r\n        label: undefined,\r\n        img: undefined,\r\n        placeholder: undefined,\r\n        source: [],\r\n        filter: [],\r\n        hide: false,\r\n        description: undefined,\r\n        disabled: false,\r\n        focus: false,\r\n        readonly: false,\r\n        class: [],\r\n        prependText: ''\r\n    };\r\n\r\n    private controlNotifications: {\r\n        disabled?: string[],\r\n        placeholder?: string[],\r\n        filter?: string[],\r\n        hide?: string[],\r\n        description?: string[],\r\n        label?: string[],\r\n        focus?: string[],\r\n        readonly: string[],\r\n        class: string[],\r\n        img?:string[]\r\n    };\r\n\r\n}","import { OverrideConfigProp } from \"../models/interface/override-config-prop\";\r\n\r\nexport const dynamicContainer:\r\n    {\r\n        registerComponent(name: string, target: any): void,\r\n        registerOverrideProp(props:{[key:string]:OverrideConfigProp}),\r\n        getOverrideProp(name:string):OverrideConfigProp\r\n        getComponent(name: string): { name: string, instance: any };\r\n    } = new (class {\r\n        private components: Array<{ name: string, instance: any}>  = [];\r\n        private overrideProps:any = {};\r\n        registerComponent(name:string,target: any):void {\r\n            let componentContainer = this.components.filter(component => component.instance == target)[0]\r\n            if (!componentContainer)\r\n                this.components.push({ instance: target, name: name});\r\n        }\r\n\r\n        registerOverrideProp(props:{[key:string]:OverrideConfigProp}){\r\n            if(props)\r\n                Object.keys(props).forEach(t=>this.overrideProps[t] = props[t]);\r\n        }\r\n\r\n        getOverrideProp(name:string):OverrideConfigProp{\r\n            return this.overrideProps[name];\r\n        }    \r\n\r\n        getComponent(name: string): { name: string, instance: any } {\r\n            return this.components.filter(component => component.name == name)[0]\r\n        }\r\n\r\n})();\r\n","import { ValidatorFn, AsyncValidatorFn } from \"@angular/forms\"\r\nimport {  Hooks} from \"../models/interface/action-config\"\r\n\r\nimport { BaseFormControlConfig } from './base-form-control-config'\r\nimport { RxFormControl } from \"@rxweb/reactive-form-validators\";\r\nimport { dynamicContainer } from \"../core/dynamicContainer\";\r\n\r\n\r\nexport abstract class FormControlConfig extends BaseFormControlConfig {\r\n    private _formControl: RxFormControl;\r\n\r\n    constructor(fieldConfig: { [key: string]: any }, public controlsConfig: { [key: string]: FormControlConfig },notificationId:number) {\r\n        super(controlsConfig, notificationId);\r\n        this.config = fieldConfig;\r\n       this.overrideProperty();\r\n        this.value = fieldConfig.value;\r\n        super.checkFilterFunction();\r\n        this.props = this.config.props || Object.create({});\r\n        this.setNotification();\r\n    }\r\n\r\n    private overrideProperty(){\r\n        if(this.config.overrideProps){\r\n            this.config.overrideProps.forEach(t=>{\r\n                let propInfo = dynamicContainer.getOverrideProp(t);\r\n                this.overrideProp(propInfo);\r\n            })\r\n        }\r\n    }\r\n\r\n    overrides:any = {};\r\n\r\n    \r\n    inputs: any;\r\n    events: any;\r\n\r\n    value: any;\r\n    disabled: boolean;\r\n    label: string;\r\n    img: string;\r\n    placeholder: string;\r\n    hide: boolean;\r\n    description: string;\r\n    focus: boolean;\r\n    readonly: boolean;\r\n    class: string[];\r\n\r\n    isPlainTextMode: boolean;\r\n    \r\n    validator: ValidatorFn;\r\n    asyncValidator: AsyncValidatorFn;\r\n\r\n    hooks: Hooks\r\n\r\n\r\n    set formControl(value: RxFormControl) {\r\n        this._formControl = value;\r\n        setTimeout(() => this.overrideErrorsProp(this._formControl), 10);\r\n    }\r\n\r\n    get formControl() {\r\n        return this._formControl;\r\n    }\r\n\r\n    get errorMessage(): string {\r\n        return this.formControl.errorMessage;\r\n    }\r\n\r\n    get prependText() {\r\n        return this.config.ui ? this.config.ui.prependText : '';\r\n    }\r\n}\r\n\r\nexport class ControlConfig extends FormControlConfig {\r\n    constructor(fieldConfig: { [key: string]: any }, controlsConfig: { [key: string]: FormControlConfig }) {\r\n        super(fieldConfig, controlsConfig, 0);\r\n    }\r\n}","export function getInstance(model: any, objectArguments: any[]) {\r\n    let classInstance = Object.create(model.prototype)\r\n    try{\r\n        model.apply(classInstance, objectArguments);\r\n    }catch(ex){\r\n        ///resolution of issue https://github.com/rxweb/rxweb/issues/188\r\n        classInstance = Reflect.construct(model,objectArguments);\r\n    }\r\n    return classInstance;\r\n}","import { AbstractControl,FormGroup } from \"@angular/forms\"\r\n\r\nexport class ApplicationUtil\r\n{\r\n    static getRootFormGroup(control: AbstractControl): FormGroup {\r\n        if (control.parent) {\r\n            return this.getRootFormGroup(control.parent);\r\n        }\r\n        return <FormGroup>control;\r\n    }\r\n\r\n    static isObject(value: any): boolean {\r\n        return Object.prototype.toString.call(value) === '[object Object]';\r\n    }\r\n}","import { ValidatorFn, AsyncValidatorFn } from \"@angular/forms\"\r\n\r\nimport { RxFormGroup, RxFormArray, RxFormControl, RxwebValidators } from '@rxweb/reactive-form-validators';\r\nimport { DynamicFormConfiguration } from \"../models/interface\";\r\nimport { FormControlConfig } from \"./form-control-config\";\r\nimport { getInstance } from \"../functions/get-instance.function\";\r\nimport { DynamicFormBuildConfig } from '../models/interface/dynamic-form-build-config'\r\nimport { ApplicationUtil } from \"../util/application-util\";\r\nimport { NotificationState } from \"../statics/control-state\";\r\n\r\nconst ARRAY: string = \"array\";\r\nexport class RxDynamicFormBuilder {\r\n    private formConfiguration: DynamicFormConfiguration;\r\n    formGroup(fields: any[], dynamicFormConfig?: DynamicFormConfiguration): DynamicFormBuildConfig {\r\n        let notificationId = NotificationState.notificationId++;\r\n        NotificationState.notifications[notificationId] = {};\r\n        this.formConfiguration = dynamicFormConfig || {};\r\n        let entityObject: { [key: string]: any } = {};\r\n        let formFieldConfigs = new Array<FormControlConfig>();\r\n        let modelConfig = {};\r\n        let formGroup = new RxFormGroup({}, entityObject, {}, undefined);\r\n        fields.forEach((x, i) => {\r\n            if (x.type == ARRAY) {\r\n                this.createFormArray(modelConfig, x, ApplicationUtil.getRootFormGroup(formGroup) as RxFormGroup, entityObject, notificationId);\r\n            } else {\r\n                let splitName = x.name.split('.');\r\n                let name = x.name;\r\n                if (splitName.length > 1) {\r\n                    if (!entityObject[splitName[0]]) {\r\n                        entityObject[splitName[0]] = {};\r\n                        formGroup.addControl(splitName[0], new RxFormGroup({}, entityObject[splitName[0]], {}, undefined));\r\n                        formGroup = formGroup.controls[splitName[0]] as RxFormGroup;\r\n                    } else if (formGroup.controls[splitName[0]] != undefined && formGroup.controls[splitName[0]] instanceof RxFormGroup) \r\n                        formGroup = formGroup.controls[splitName[0]] as RxFormGroup;\r\n                    name = splitName[1];\r\n                } else\r\n                    formGroup = ApplicationUtil.getRootFormGroup(formGroup) as RxFormGroup;\r\n                let modelInstance = this.getDynamicModelInstance(x, modelConfig, entityObject, name, notificationId);\r\n                formGroup.addControl(name, modelInstance.formControl);\r\n                formFieldConfigs.push(modelInstance)\r\n            }\r\n        });\r\n        if (this.formConfiguration.additionalConfig)\r\n            this.formConfiguration.additionalConfig.forEach(t => this.getModelInstance(t, modelConfig, notificationId));\r\n        let rootFormGroup = ApplicationUtil.getRootFormGroup(formGroup) as RxFormGroup;\r\n        rootFormGroup[\"model\"] = undefined;\r\n        return  {\r\n            controlsConfig: modelConfig,\r\n            formGroup: rootFormGroup\r\n        };\r\n    }\r\n\r\n\r\n    \r\n\r\n    private createFormArray(modelConfig: any, field: { [key: string]: any }, formGroup: RxFormGroup, entityObject: { [key: string]: any }, notificationId) {\r\n        modelConfig[field.name] = [];\r\n        entityObject[field.name] = [];\r\n        let formArray = new RxFormArray(entityObject[field.name], []);\r\n        \r\n        if (field.controlConfigs) {\r\n            if (field.rows)\r\n            field.rows.forEach(row => {\r\n                formArray.controls.push(this.createDynamicFormGroup(field, modelConfig[field.name], this.getRefObject(entityObject[field.name]), row, notificationId));\r\n            })\r\n            if (field.minimumRepeatCount && field.minimumRepeatCount > 0) {\r\n                let countLeft = field.minimumRepeatCount - (formArray.controls.length)\r\n                for (var i = 0; i < countLeft; i++)\r\n                    formArray.controls.push(this.createDynamicFormGroup(field, modelConfig[field.name], this.getRefObject(entityObject[field.name]), { fields: [] }, notificationId));\r\n            }\r\n            this.addTwoProp(modelConfig[field.name], field, entityObject[field.name], formArray,notificationId);\r\n            formGroup.addControl(field.name, formArray);\r\n        }\r\n    }\r\n\r\n    private getRefObject(entityObject:any[]) {\r\n        let jObject = {};\r\n        entityObject.push(jObject);\r\n        return jObject;\r\n    }\r\n\r\n\r\n    private addTwoProp(modelConfig: any, x, entityObject, formArray,notificationId) {\r\n        modelConfig.__proto__.addItem = () => {\r\n            formArray.controls.push(this.createDynamicFormGroup(x, modelConfig, this.getRefObject(entityObject), { fields: [] }, notificationId));\r\n        }\r\n\r\n        modelConfig.__proto__.removeItem = (index: number) => {\r\n            formArray.removeAt(index);\r\n            modelConfig.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    private createDynamicFormGroup(x, modelConfig, entityObject, row, notificationId) {\r\n        let nestedFormGroup = new RxFormGroup({}, entityObject, {}, undefined);\r\n        let jObject = {};\r\n        modelConfig.push(jObject);\r\n        Object.keys(x.controlConfigs).forEach(key => {\r\n            let field = row.fields.filter(x => x.name == key)[0];\r\n            let formControlConfig = { ...x.controlConfigs[key], ...{ name: key } };\r\n            if (field)\r\n                formControlConfig = { ...formControlConfig, ...field };\r\n            let modelInstance = this.getDynamicModelInstance(formControlConfig, jObject, entityObject, key, notificationId);\r\n            nestedFormGroup.addControl(key, modelInstance.formControl);\r\n        })\r\n        return nestedFormGroup;\r\n    }\r\n\r\n    private getModelInstance(x, modelConfig, notificationId) {\r\n        let configModel = (x.modelName) && this.formConfiguration && this.formConfiguration.controlConfigModels ? this.formConfiguration.controlConfigModels.filter((y) => y.modelName == x.modelName)[0] : undefined;\r\n        let modelArguments = [x, modelConfig, notificationId];\r\n        let model = undefined;\r\n        if (configModel) {\r\n            model = configModel.model;\r\n            if (configModel.arguments)\r\n                configModel.arguments.forEach(t => modelArguments.push(t));\r\n        } else\r\n            model = FormControlConfig;\r\n        let modelInstance = getInstance(model, modelArguments);\r\n        modelConfig[x.name] = modelInstance;\r\n        return modelInstance\r\n    }\r\n\r\n    private getDynamicModelInstance(x, modelConfig, entityObject, name, notificationId) {\r\n        let modelInstance = this.getModelInstance(x, modelConfig, notificationId);\r\n        let validators: ValidatorFn[] = [];\r\n        let asyncValidators: AsyncValidatorFn[] = [];\r\n        if (x.validators)\r\n            this.validatorBindings(validators, x.validators);\r\n        if (modelInstance.validator)\r\n            validators.push(modelInstance.validator.bind(modelInstance));\r\n        if (modelInstance.asyncValidator)\r\n            asyncValidators.push(modelInstance.asyncValidator.bind(modelInstance));\r\n        if (modelInstance)\r\n            entityObject[x.name] = x.value;\r\n        let baseObject = {};\r\n        baseObject[x.name] = x.value;\r\n        entityObject[x.name] = x.value;\r\n        modelInstance.formControl = new RxFormControl(x.value, validators, asyncValidators, entityObject, baseObject, name, undefined);\r\n        return modelInstance;\r\n    }\r\n\r\n    private validatorBindings(validations: any[], validationConfig: any) {\r\n        for (var column in RxwebValidators) {\r\n            if (validationConfig[column]) {\r\n                validations.push(RxwebValidators[column](validationConfig[column]));\r\n            }\r\n        }\r\n        return validations;\r\n    }\r\n}","\r\nconst commonAttributes = {\r\n    placeholder: ':placeholder',\r\n    readonly: ':readonly',\r\n    class: ':class',\r\n    name: '{config.name'\r\n};\r\nconst commonEvents = {\r\n    focus: ':focus',\r\n    input: 'true',\r\n    blur: 'blur'\r\n};\r\n\r\n\r\n\r\nconst checkBoxAndRadioDesign = ['div', [{ source: true }, {\r\n    for: {\r\n        source: function (item, index) {\r\n            return ['div', ['input', [{\r\n                attr: {\r\n                    type: '{config.type', ...commonAttributes, value: item[this.config.valuePropName || 'value'], checked: item[this.config.valuePropName || 'value'] == this.value,\r\n                    disabled: item.disabled ? item.disabled : ':disabled'\r\n\r\n                },\r\n                events: commonEvents,\r\n                overrideProp: (index == 0)\r\n            }],\r\n                'label', [{ prop: { innerText: item[this.config.textPropName || 'text'] } }]]]\r\n        }\r\n    }\r\n}\r\n\r\n]];\r\n\r\nconst configUiText = { innerText: ':props.text' };\r\nconst classAttribute = { class: ':class', style: { display: \":hide\" } };\r\n\r\nexport const DYNAMIC_ELEMENT_DESIGN_TREE: { [key: string]: any } = {\r\n\r\n    p: ['p', [{ prop: configUiText, attr: classAttribute }]],\r\n\r\n    h1: ['h1', [{ prop: configUiText, attr: classAttribute }]],\r\n\r\n    h2: ['h2', [{ prop: configUiText, attr: classAttribute }]],\r\n\r\n    h3: ['h3', [{ prop: configUiText, attr: classAttribute }]],\r\n\r\n    h4: ['h4', [{ prop: configUiText, attr: classAttribute }]],\r\n\r\n    h5: ['h5', [{ prop: configUiText, attr: classAttribute }]],\r\n\r\n    h6: ['h6', [{ prop: configUiText, attr: classAttribute }]],\r\n\r\n    a: ['a', [{ attr: { href: '{config.href', ...classAttribute, }, prop: configUiText }]],\r\n\r\n    hr: ['hr', [{ attr: commonAttributes }]],\r\n\r\n    strong: ['strong', [{ prop: configUiText, attr: classAttribute }]],\r\n\r\n    span: ['span', [{ prop: configUiText, attr: classAttribute }]],\r\n\r\n    img: ['img', [{ prop: { src: ':img' }, attr: { style: { display: \":img\" }, ...classAttribute } }]],\r\n\r\n    label: ['label', [{ prop: { innerText: ':label' }, attr: { style: { display: \":label\" }, ...classAttribute } }]],\r\n\r\n    small: ['small', [{ prop: { innerText: ':description' }, attr: { style: { display: \":description\" }, ...classAttribute } }]],\r\n\r\n    input: ['input', [{\r\n        attr: { type: '{config.type', ...commonAttributes, disabled: ':disabled' },\r\n        events: commonEvents,\r\n    }]],\r\n\r\n    error: [`span`, [{ prop: { innerText: ':errorMessage' }, attr: { style: { display: \":errorMessage\" }, ...commonAttributes } }]],\r\n\r\n    div: ['div', [{ attr: classAttribute }]],\r\n\r\n    card: ['div', [{ attr: classAttribute }]],\r\n\r\n    'card-header': ['div', [{ attr: classAttribute, prop: configUiText }]],\r\n\r\n    'card-body': ['div', [{ attr: classAttribute }]],\r\n\r\n    buttonGroup: ['div', [{\r\n        for: {\r\n            source: function (item) {\r\n                return ['label', [{\r\n                    attr: {\r\n                        type: '{config.type', ...commonAttributes, value: item[this.config.valuePropName || 'value']\r\n                    },\r\n                    events: commonEvents\r\n                }],\r\n                    'label', [{ prop: { innerText: item[this.config.textPropName || 'text'] } }]]\r\n            }\r\n        }\r\n    }\r\n\r\n    ]\r\n    ],\r\n\r\n    'prepend-left': [\"div\", [\r\n        \"div\", [\r\n            \"div\", [{ prop: { innerText: '{config.ui.prependText.left' } }]],\r\n        '[input-text]'\r\n    ]],\r\n\r\n    'prepend-right': [\"div\", [\r\n        '[input-text]',\r\n        \"div\", [\r\n            \"div\", [{ prop: { innerText: '{config.ui.prependText.right' } }]],\r\n    ]],\r\n\r\n    'prepend-both': [\"div\", [\r\n        \"div\", [\r\n            \"div\", [{ prop: { innerText: '{config.ui.prependText.left' } }]],\r\n        '[input-text]',\r\n        \"div\", [\r\n            \"div\", [{ prop: { innerText: '{config.ui.prependText.right' } }]],\r\n    ]],\r\n\r\n\r\n    textarea: ['textarea', [{ attr: { ...{ rows: '{config.ui.rows', cols: '{config.ui.cols' }, ...commonAttributes }, events: commonEvents }]],\r\n\r\n    radio: checkBoxAndRadioDesign,\r\n\r\n    'checkbox': checkBoxAndRadioDesign,\r\n\r\n    select: ['select', [{\r\n        attr: {\r\n            multiple: '{config.multiselect',\r\n        },\r\n        events: commonEvents,\r\n        source: true\r\n    },\r\n        'option', [{ prop: { innerText: `:placeholder` }, attr: { value: '', style: { display: \":placeholder\" } } }],\r\n    {\r\n        for: {\r\n            source: function (item) {\r\n                return ['option', [\r\n                    {\r\n                        prop: { innerText: item[this.config.textPropName || 'text'] }, attr: {\r\n                            value: item[this.config.valuePropName || 'value'],\r\n                            selected: Array.isArray(this.value) ? this.value.filter(x => item[this.config.valuePropName || 'value'] == x)[0] != undefined : item[this.config.valuePropName || 'value'] == this.value,\r\n                            disabled: item.disabled\r\n                        }\r\n                    }\r\n                ]];\r\n            }\r\n        }\r\n    }\r\n    ]],\r\n\r\n    button: ['button', [{ attr: { ...commonAttributes, name: '{config.name', type: '{config.type' }, events: { click: '{config.events.click' }, prop: { innerText: ':props.text' } }]],\r\n\r\n    alert: ['div', [{ attr: commonAttributes }]],\r\n\r\n    viewMode: {\r\n        basic: ['div', [{\r\n            attr: {\r\n                style: { display: \":hide\" }\r\n            }\r\n        },\r\n            '[label]',\r\n            '[control]',\r\n            '[error]',\r\n            '[small]'\r\n        ]],\r\n\r\n        horizontal: ['div', [{\r\n            attr: {\r\n                style: { display: \":hide\" }\r\n            }\r\n        },\r\n            '[label]',\r\n            'div', ['[control]', '[error]', '[small]']\r\n        ]],\r\n        inline: [],\r\n\r\n        advance: ['div', [\r\n            'div', [{\r\n                attr: {\r\n                    style: { display: \":hide\" }\r\n                }\r\n            },\r\n                '[img]', '[label]', '[control]', '[error]', '[small]']\r\n        ]]\r\n    }\r\n}\r\n\r\n","import { FILE, RANGE, CHECKBOX,RADIO,BLANK } from './app.const'\r\n\r\nexport const BOOSTRAP_CLASS_CONFIG: { [key: string]: any } = {\r\n    defaultControl: 'form-control',\r\n    fileControl: 'form-control-file',\r\n    readOnlyPlainText: 'form-control-plaintext',\r\n    rangeControl: 'form-control-range',\r\n    checkBoxAndRadioControl: 'form-check-input',\r\n    checkboxAndRadioControlInline: 'form-check-inline',\r\n    controlValid: 'is-valid',\r\n    controlInvalid: 'is-invalid',\r\n    validMessage: 'valid-feedback',\r\n    invalidMessage: 'invalid-feedback',\r\n}\r\n\r\nconst PREPEND_TEXT_CLASS_PATH = {\r\n    class: ['input-group-prepend'],\r\n    child: {\r\n        0: { class: ['input-group-text'] }\r\n    }\r\n}\r\nconst INPUT_GROUP = ['input-group'];\r\n\r\nexport const BOOTSTRAP_DESIGN_CONFIG: { [key: string]: any } = {\r\n\r\n\r\n    elementClassPath: {\r\n        \"prepend-left\": {\r\n            class: INPUT_GROUP,\r\n            child: {\r\n                0: PREPEND_TEXT_CLASS_PATH\r\n            }\r\n        },\r\n\r\n        \"prepend-right\": {\r\n            class: INPUT_GROUP,\r\n            child: {\r\n                1: PREPEND_TEXT_CLASS_PATH\r\n            }\r\n        },\r\n\r\n        \"prepend-both\": {\r\n            class: INPUT_GROUP,\r\n            child: {\r\n                0: PREPEND_TEXT_CLASS_PATH,\r\n                2: PREPEND_TEXT_CLASS_PATH\r\n            }\r\n        },\r\n\r\n        input: { class: [inputElementClassProvider, invalidClass ],listenerProps:[\":errorMessage\"] },\r\n\r\n        checkbox: {\r\n            class: [], child: {\r\n                0: {\r\n                    class: ['form-check', inLineRadioAndCheckbox],\r\n                    child: { 0: { class: ['form-check-input'] }, 1: { class: ['form-check-label'] } }\r\n                }\r\n            }\r\n        },\r\n\r\n        radio: {\r\n            class: [], child: {\r\n                0: {\r\n                    class: ['form-check', inLineRadioAndCheckbox],\r\n                    child: { 0: { class: ['form-check-input'] }, 1: { class: ['form-check-label'] } }\r\n                }\r\n            }\r\n        },\r\n\r\n        'error': { class: [function () { return !((this.formControl.validator || this.formControl.asyncValidator) && this.formControl.errorMessage) ? \"\": BOOSTRAP_CLASS_CONFIG.invalidMessage }], listenerProps: [\":errorMessage\"] },\r\n\r\n        button: { class: ['btn'] },\r\n\r\n        alert: { class: ['alert'] },\r\n\r\n        card: { class: ['card'] },\r\n\r\n        'card-header': { class: ['card-header'] },\r\n\r\n        'card-body': {class:['card-body']},\r\n\r\n        viewMode: {\r\n\r\n            basic: { class: ['form-group'] },\r\n\r\n            horizontal: {\r\n                class: ['form-group', 'row'],\r\n                child: {\r\n                    0: { class: [function () { return this.config.ui && this.config.ui.viewMode && this.config.ui.viewMode.horizontal && this.config.ui.viewMode.horizontal.label ? this.config.ui.viewMode.horizontal.label : ''  }]},\r\n                    1: {\r\n                        class: [function () { return this.config.ui && this.config.ui.viewMode && this.config.ui.viewMode.horizontal && this.config.ui.viewMode.horizontal.div ? this.config.ui.viewMode.horizontal.div : '' }],\r\n                    }\r\n                }\r\n            },\r\n            inline: {\r\n                class: [], child: {}},\r\n            advance: {\r\n                class: ['form-row', function () { return this.config && this.config.ui && this.config.ui.viewMode && this.config.ui.viewMode.advance && this.config.ui.viewMode.advance.root_div ? this.config.ui.viewMode.advance.root_div : '' }],\r\n                child: {\r\n                    0: {\r\n                        class: ['form-group', function () { return this.config &&  this.config.ui && this.config.ui.viewMode && this.config.ui.viewMode.advance && this.config.ui.viewMode.advance.div ? this.config.ui.viewMode.advance.div : '' }],\r\n                        child: {\r\n                            0: { class: [function () { return this.config &&  this.config.ui && this.config.ui.viewMode && this.config.ui.viewMode.advance && this.config.ui.viewMode.advance.label ? this.config.ui.viewMode.advance.label : '' } ]},\r\n                            2: { class: [function () { return this.config &&  this.config.ui && this.config.ui.viewMode && this.config.ui.viewMode.advance && this.config.ui.viewMode.advance.error ? this.config.ui.viewMode.advance.error : '' } ]},\r\n                            3: { class: [function () { return this.config.ui && this.config.ui.viewMode && this.config.ui.viewMode.advance && this.config.ui.viewMode.advance.small ? this.config.ui.viewMode.advance.small : '' }] }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        },\r\n        small: { class: ['form-text'] },\r\n\r\n        textarea: { class: [BOOSTRAP_CLASS_CONFIG.defaultControl, invalidClass], listenerProps: [\":errorMessage\"]  },\r\n\r\n        select: { class: [BOOSTRAP_CLASS_CONFIG.defaultControl, invalidClass], listenerProps: [\":errorMessage\"]  }\r\n\r\n    }\r\n}\r\n\r\nfunction inputElementClassProvider() {\r\n    let elementClass: string = '';\r\n    if (!this.readonly || (this.readonly && !this.isPlainTextMode))\r\n        switch (this.config.type) {\r\n            case FILE:\r\n                elementClass = BOOSTRAP_CLASS_CONFIG.fileControl;\r\n                break;\r\n            case RANGE:\r\n                elementClass = BOOSTRAP_CLASS_CONFIG.rangeControl;\r\n                break;\r\n            case RADIO:\r\n            case CHECKBOX:\r\n                elementClass = BLANK;\r\n                break;\r\n            default:\r\n                elementClass = BOOSTRAP_CLASS_CONFIG.defaultControl;\r\n                break;\r\n        }\r\n    else if (this.readonly && this.isPlainTextMode)\r\n        elementClass = BOOSTRAP_CLASS_CONFIG.readOnlyPlainText;\r\n    return elementClass;\r\n}\r\n\r\nfunction inLineRadioAndCheckbox() {\r\n    return this.config && this.config.inline ? ['form-check-inline'] : [];\r\n}\r\n\r\nfunction invalidClass() {\r\n    let invalidClass = ((this.formControl.validator || this.formControl.asyncValidator) && this.formControl.errorMessage) ? BOOSTRAP_CLASS_CONFIG.controlInvalid : ''; return invalidClass;\r\n}","export function objectPropValue(key: string, valueObject: { [key: string]: any }) {\r\n    let jObject = undefined;\r\n    let splitTexts = key.split('.');\r\n    for (var column of splitTexts) {\r\n        if (!jObject)\r\n            jObject = valueObject;\r\n        if (jObject)\r\n            jObject = jObject[column];\r\n        else\r\n            break;\r\n    }\r\n    return jObject;\r\n}\r\n\r\nexport function setObjectPropValue(key: string,value:any, valueObject: { [key: string]: any }) {\r\n    let jObject = valueObject;\r\n    let splitTexts = key.split('.');\r\n    for (var i = 0; i < splitTexts.length - 1; i++) {\r\n        if (jObject)\r\n            jObject = jObject[splitTexts[i]];\r\n    }\r\n    jObject[splitTexts[splitTexts.length - 1]] = value;\r\n}","import { COLON, BLANK, STRING, SQUARE} from '../../const/app.const';\r\nimport { DynamicNodeConfig } from '../../models/interface/dynamic-node-config'\r\nimport { objectPropValue } from '../../functions/object-prop-value.function'\r\nimport { FormControlConfig } from \"../../services/form-control-config\"\r\n\r\nconst PROPS: string = \":props.\";\r\nconst GLOBAL_MATCH: string = \"g\";\r\nconst DOT: string = \".\";\r\n\r\nexport abstract class BaseObjectAccessor {\r\n    controlConfig: FormControlConfig;\r\n    subscribeProps: { [key: string]: any } = {\r\n        names: [], props: {}\r\n    };\r\n\r\n    constructor(public dynamicNodeConfig: DynamicNodeConfig) { this.controlConfig = this.dynamicNodeConfig.controlConfig; }\r\n\r\n    getPropName(text: string) {\r\n        if (text[0] == COLON || (text[0] == SQUARE)) {\r\n            return text.replace(new RegExp(COLON, GLOBAL_MATCH), BLANK).replace(new RegExp(SQUARE, GLOBAL_MATCH), BLANK);\r\n        }\r\n        return text;\r\n    }\r\n\r\n\r\n    getValue(text: string) {\r\n        if (typeof text == STRING && ((text[0] == COLON) || (text[0] == SQUARE))) {\r\n            text = text.replace(new RegExp(COLON, GLOBAL_MATCH), BLANK).replace(new RegExp(SQUARE, GLOBAL_MATCH), BLANK);\r\n            return objectPropValue(text, this.controlConfig);\r\n        }\r\n        return text;\r\n    }\r\n\r\n    setPropSubscription(propName: string, type: string, attributeName: string, valuePropName: string = '', parentPropName: string = '') {\r\n        if (propName.startsWith(PROPS)) \r\n            this.defineProp(propName);\r\n\r\n        let prop = this.getPropName(propName);\r\n\r\n        if (!this.subscribeProps.props[prop])\r\n            this.subscribeProps.props[prop] = {};\r\n        if (!this.subscribeProps.props[prop][type])\r\n            this.subscribeProps.props[prop][type] = {}; \r\n        if (parentPropName) {\r\n            this.subscribeProps.props[prop][type][parentPropName] = {};\r\n            this.subscribeProps.props[prop][type][parentPropName][attributeName] = (valuePropName) ? valuePropName : propName;\r\n        } else\r\n            this.subscribeProps.props[prop][type][attributeName] = (valuePropName) ? valuePropName : propName;\r\n\r\n        if (this.subscribeProps.names.indexOf(prop) == -1)\r\n            this.subscribeProps.names.push(prop);\r\n\r\n    }\r\n\r\n    isSubscribeProp(propName:string) {\r\n        return (typeof propName == STRING && (propName[0] == COLON));\r\n    }\r\n\r\n    defineProp(propName: string) {\r\n        let splitText = propName.split(DOT);\r\n        if (splitText.length > 1) {\r\n            let descriptor = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(this.controlConfig.props), splitText[1]);\r\n            if (!descriptor)\r\n                this.controlConfig.defineProp(splitText[1]);\r\n        }\r\n    }\r\n}","import { ViewContainerRef, ComponentFactoryResolver, ComponentRef, EmbeddedViewRef } from \"@angular/core\"\r\nimport { FormControlConfig } from '../../services/form-control-config'\r\nimport { DynamicFormBuildConfig } from \"../../models/interface/dynamic-form-build-config\"\r\nexport interface ComponentType<T> {\r\n    new (...args: any[]): T;\r\n}\r\n\r\nexport class ComponentView<T> {\r\n    private component: ComponentType<T>;\r\n    private viewContainerRef: ViewContainerRef;\r\n    private componentFactoryResolver: ComponentFactoryResolver;\r\n    private componentRef: ComponentRef<T>;\r\n\r\n    constructor(_component: ComponentType<T>, _viewContainerRef: ViewContainerRef, _componentFactoryResolver: ComponentFactoryResolver,private formControlConfig:FormControlConfig,private dynamicFormBuildConfig:DynamicFormBuildConfig) {\r\n        this.component = _component;\r\n        this.viewContainerRef = _viewContainerRef;\r\n        this.componentFactoryResolver = _componentFactoryResolver;\r\n    }\r\n\r\n    create(): void {\r\n        let componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.component);\r\n        this.componentRef = this.viewContainerRef.createComponent(componentFactory, this.viewContainerRef.length, this.viewContainerRef.parentInjector);\r\n        this.setParams(this.componentRef.instance);\r\n    }\r\n\r\n    private setParams(instance: { [key: string]: any }) {\r\n        if (this.formControlConfig.inputs) {\r\n            let propNames = Object.getOwnPropertyNames(this.formControlConfig.inputs);\r\n            for (let propName of propNames) \r\n                this.overridePropAndSetValue(instance, propName, this.formControlConfig.inputs);\r\n        }\r\n        instance[\"controlConfig\"] = this.formControlConfig;\r\n        instance[\"dynamicFormBuildConfig\"] = this.dynamicFormBuildConfig;\r\n    }\r\n\r\n    overridePropAndSetValue(instance: any, propName: string, inputs: any) {\r\n        let descriptor = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(inputs), propName)\r\n        let value = '';\r\n        if (!descriptor) {\r\n            value = inputs[propName];\r\n            delete inputs[propName];\r\n        }\r\n        Object.defineProperty(inputs, propName, {\r\n            get() { return (descriptor) ? descriptor.get() : value },\r\n            set(v) { instance[propName] = v; (descriptor) ? descriptor.set.call(inputs, v) : value = v; }\r\n        })\r\n        instance[propName] = descriptor ? descriptor.get.call(inputs) : value;\r\n    }\r\n\r\n    rootNode(): HTMLElement {\r\n        return (this.componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\r\n    }\r\n\r\n    getComponentRef(): ComponentRef<any> {\r\n        return this.componentRef;\r\n    }\r\n\r\n    destroy():void {\r\n        if (this.componentRef)\r\n        {\r\n            this.componentRef.destroy();\r\n            this.componentRef = undefined;\r\n        }\r\n    }\r\n}","import { DynamicNodeConfig } from \"../../models/interface/dynamic-node-config\";\r\nimport { BaseObjectAccessor } from './base-object-accessor';\r\nimport { CHECKBOX, SELECT_MULTIPLE, RADIO, FILE } from '../../const/app.const'\r\nimport { ControlState } from '../../statics/control-state';\r\nimport { dynamicContainer } from \"../../core/dynamicContainer\";\r\nimport { ComponentView } from \"../component-viewer/component-view\";\r\n\r\nexport abstract class ElementAccessor extends BaseObjectAccessor{\r\n    element: any;\r\n    protected componentView: any;\r\n\r\n    constructor(dynamicNodeConfig: DynamicNodeConfig) {\r\n        super(dynamicNodeConfig)\r\n    }\r\n\r\n    createNodeElement(parentElement: any, name: string) {\r\n        this.element = name.startsWith(\"#\") ? this.createComponentView(this.dynamicNodeConfig.controlConfig) : this.dynamicNodeConfig.renderer.createElement(name);\r\n        this.dynamicNodeConfig.renderer.appendChild(parentElement, this.element);\r\n    }\r\n\r\n    private createComponentView(controlConfig: any) {\r\n        let container = dynamicContainer.getComponent(controlConfig.config.type.replace(\"#\", \"\"));\r\n        if (container) {\r\n            this.componentView = new ComponentView(container.instance, this.dynamicNodeConfig.viewContainerRef, this.dynamicNodeConfig.componentFactoryResolver, controlConfig, this.dynamicNodeConfig.dynamicFormBuildConfig);\r\n            this.componentView.create();\r\n            return this.componentView.rootNode();\r\n        }\r\n    }\r\n\r\n\r\n    removeChildren(element: any) {\r\n        if (element.firstElementChild) {\r\n            this.removeChildren(element.firstElementChild);\r\n        }\r\n        let controlId = element.getAttribute(\"data-rxwebid\");\r\n        if (controlId && ControlState.controls[controlId]) {\r\n            ControlState.controls[controlId].destroy();\r\n            delete ControlState.controls[controlId];\r\n        }\r\n    }\r\n   \r\n\r\n    setControlConfigValue(targetElement) {\r\n        let value = targetElement.value === \"\" ? null : targetElement.value;\r\n        switch (targetElement.type) {\r\n            case FILE:\r\n                this.controlConfig.formControl.setValue(targetElement.files)\r\n                this.controlConfig.value = targetElement.files;\r\n                break;\r\n            case CHECKBOX:\r\n                this.setCheckboxValue(targetElement);\r\n                break;\r\n            case SELECT_MULTIPLE:\r\n                let values = [];\r\n                for (let option of this.element.options)\r\n                    if (option.selected && option.value)\r\n                        values.push(option.value);\r\n                this.controlConfig.value = values;\r\n                break;\r\n            default:\r\n                this.controlConfig.formControl.setValue(value);\r\n                this.controlConfig.value = value;\r\n                break;\r\n        }\r\n    }\r\n\r\n    resetElementValue(value: any) {\r\n        switch (this.element.type) {\r\n            case CHECKBOX:\r\n            case RADIO:\r\n                var elements:any = document.querySelectorAll(`[name='${this.controlConfig.config.name}']`);\r\n                for (var i = 0; i < elements.length; i++) {\r\n                    elements[i].checked = this.element.type == CHECKBOX ? this.checkedCheckbox(value, elements[i]) : this.checkedRadio(value, elements[i]);\r\n                }\r\n                break;\r\n            case SELECT_MULTIPLE:\r\n                for (let option of this.element.options) {\r\n                    option.selected = (value) ? value.filter(t => t == option.value)[0] != undefined : false;\r\n                }\r\n                break;\r\n            default:\r\n                this.element.value = value;\r\n        }\r\n    }\r\n\r\n    private checkedCheckbox = (value, element) => (value) ? (this.controlConfig.config.multiselect) ? value.filter(t => element.value == t)[0] != undefined : element.value == value : false;\r\n\r\n    private checkedRadio = (value, element) => (value) ? value == element.value : false;\r\n\r\n    private setCheckboxValue(targetElement) {\r\n        let value = (this.controlConfig.config.multiselect) ? this.controlConfig.value || [] : targetElement.value;\r\n        if (targetElement.checked)\r\n            (this.controlConfig.config.multiselect) ? value.push(targetElement.value) : null;\r\n        else\r\n            (this.controlConfig.config.multiselect) ? value.splice(value.indexOf(targetElement.value), 1) : value = null;\r\n        this.controlConfig.formControl.setValue(value);\r\n        this.controlConfig.value = value;\r\n    }\r\n}","import { ElementAccessor } from './element-accessor';\r\nimport { DynamicNodeConfig } from '../../models/interface/dynamic-node-config';\r\nimport { CONDITIONAL_VALIDATOR, BLUR, FOCUS, SELECT, INPUT, CLICK, EVENTS } from '../../const/app.const';\r\nimport { ValidatorFn } from '@angular/forms';\r\n\r\nexport class ElementEventProcessor extends ElementAccessor{\r\n    eventListeners: any[];\r\n    private conditionalValidator: ValidatorFn;\r\n    constructor(public dynamicNodeConfig: DynamicNodeConfig) { super(dynamicNodeConfig); }\r\n\r\n    bindEvents(events: { [key: string]: any },isSubscribe:boolean) {\r\n        Object.keys(events).forEach(eventName => {\r\n            switch (eventName) {\r\n                case FOCUS:\r\n                    this.setFocus(this.getValue(events[eventName]));\r\n                    break;\r\n                case SELECT:\r\n                case INPUT:\r\n                    this.setInput();\r\n                    break;\r\n                case BLUR:\r\n                    this.setBlur();\r\n                    break;\r\n                case CLICK:\r\n                    this.setClick(this.getValue(events[eventName]));\r\n                    break;\r\n            }\r\n            if (isSubscribe && this.isSubscribeProp(events[eventName]))\r\n                this.setPropSubscription(this.getPropName(events[eventName]), EVENTS, eventName);\r\n        })\r\n    }\r\n\r\n    setClick(functionName:string) {\r\n        this.element.onclick = () => {\r\n            if (this.controlConfig[functionName])\r\n                this.controlConfig[functionName].call(this.controlConfig);\r\n        }\r\n    }\r\n\r\n    setFocus(value: boolean) {\r\n        if (value && this.element.focus) \r\n            setTimeout(t => { this.element.focus()} , 1000);\r\n    }\r\n\r\n    setBlur() {\r\n        let listen = this.dynamicNodeConfig.renderer.listen(this.element, BLUR, () => {\r\n            this.dynamicNodeConfig.controlConfig.formControl.markAsTouched();\r\n        })\r\n        this.eventListeners.push(listen);\r\n    }\r\n\r\n    setInput() {\r\n        let listen = this.dynamicNodeConfig.renderer.listen(this.element, INPUT, (v) => {\r\n            let isPassed = true;\r\n            if (this.controlConfig.hooks && this.controlConfig.hooks.preValue) {\r\n                isPassed = this.controlConfig.hooks.preValue.call(this.controlConfig,v.target.value);\r\n                if (!isPassed) {\r\n                    this.controlConfig.formControl.patchValue(this.controlConfig.formControl.value);\r\n                    this.resetElementValue(this.controlConfig.formControl.value);\r\n                }\r\n            }\r\n            if (isPassed) {\r\n                this.setControlConfigValue(v.target);\r\n                if (this.controlConfig.hooks && this.controlConfig.hooks.postValue)\r\n                    this.controlConfig.hooks.postValue.call(this.controlConfig);\r\n                this.controlConfig.formControl.markAsDirty();\r\n            }\r\n            if (this.conditionalValidator)\r\n                this.conditionalValidator(this.controlConfig.formControl);\r\n        })\r\n        this.eventListeners.push(listen);\r\n        setTimeout(() => {\r\n            if (this.controlConfig.formControl[CONDITIONAL_VALIDATOR]) {\r\n                this.conditionalValidator = this.controlConfig.formControl[CONDITIONAL_VALIDATOR];\r\n                delete this.controlConfig.formControl[CONDITIONAL_VALIDATOR];\r\n            }\r\n        },50)\r\n        \r\n\r\n    }\r\n\r\n\r\n    \r\n}","import { ElementEventProcessor } from './element-event-processor';\r\nimport { DynamicNodeConfig } from '../../models/interface/dynamic-node-config';\r\nimport { ADDITIONAL_CLASS, BOOLEAN, NONE, BLANK, DISPLAY, FUNCTION, STRING, ATTR, PROP, CLASS, STYLE } from '../../const/app.const';\r\n\r\nexport abstract class ElementPropsAccessor extends ElementEventProcessor {\r\n    private oldAdditionalClasses: string[] = [];\r\n    private oldClasses: string[] = [];\r\n    constructor(dynamicNodeConfig: DynamicNodeConfig) { super(dynamicNodeConfig); }\r\n\r\n\r\n    bindAttribute(attr: { [key: string]: any }, isSubscribe: boolean) {\r\n        Object.keys(attr).forEach(attributeName => {\r\n            let value = (attributeName !== STYLE) ? this.getValue(attr[attributeName]) : attr[attributeName];\r\n            switch (attributeName) {\r\n                case ADDITIONAL_CLASS:\r\n                case CLASS:\r\n                    this.setClass(value, attributeName);\r\n                    break;\r\n                case STYLE:\r\n                    Object.keys(attr[attributeName]).forEach(x => {\r\n                        let value = this.getValue(attr[attributeName][x]);\r\n                        this.setStyleProp(x, value);\r\n                        if (isSubscribe && this.isSubscribeProp(attr[attributeName][x]))\r\n                            this.setPropSubscription(attr[attributeName][x], ATTR, x, '', STYLE)\r\n                    })\r\n                    break;\r\n                default:\r\n                    this.addOrRemoveAttribute(attributeName, value, attr[attributeName] === \"\");\r\n                    break;\r\n            }\r\n            if (isSubscribe && attributeName !== STYLE && this.isSubscribeProp(attr[attributeName]))\r\n                this.setPropSubscription(attr[attributeName], ATTR, attributeName);\r\n        })\r\n\r\n    }\r\n\r\n    bindProp(prop: { [key: string]: any }, isSubscribe: boolean) {\r\n        Object.keys(prop).forEach(propName => {\r\n            let value = this.getValue(prop[propName]);\r\n            this.setProperty(propName, (value !== undefined && value !== null && value !== false) ? value : \"\")\r\n            if (isSubscribe && this.isSubscribeProp(prop[propName]))\r\n                this.setPropSubscription(prop[propName], PROP, propName);\r\n        });\r\n    }\r\n\r\n    setClass(classes: any[], type: string) {\r\n        classes = this.getClassNames(type == ADDITIONAL_CLASS ? this.dynamicNodeConfig.additionalClasses.class : classes);\r\n        type == ADDITIONAL_CLASS ? this.addOrRemoveClasses(this.oldAdditionalClasses, false) : this.addOrRemoveClasses(this.oldClasses, false);\r\n        this.addOrRemoveClasses(classes);\r\n        switch (type) {\r\n            case ADDITIONAL_CLASS:\r\n                this.oldAdditionalClasses = classes;\r\n                break;\r\n            case CLASS:\r\n                this.oldClasses = classes;\r\n                break;\r\n        }\r\n    }\r\n\r\n    setStyleProp(propName: string, value: any) {\r\n        switch (propName) {\r\n            case DISPLAY:\r\n                value = (typeof value == BOOLEAN || value === undefined) ? value : !(value);\r\n                value = (value) ? NONE : BLANK;\r\n                break;\r\n        }\r\n        this.addOrRemoveStyle(propName, value);\r\n    }\r\n\r\n    setProperty(propertyName: string, value: any) {\r\n        this.dynamicNodeConfig.renderer.setProperty(this.element, propertyName, value);\r\n    }\r\n\r\n    addOrRemoveClasses(classes: any[], isAdd: boolean = true) {\r\n\r\n        if (isAdd)\r\n            classes.forEach(t => this.dynamicNodeConfig.renderer.addClass(this.element, t));\r\n        else\r\n            classes.forEach(t => this.dynamicNodeConfig.renderer.removeClass(this.element, t));\r\n    }\r\n\r\n\r\n    addOrRemoveStyle(styleName: string, value: any) {\r\n        if (value)\r\n            this.dynamicNodeConfig.renderer.setStyle(this.element, styleName, value);\r\n        else\r\n            this.dynamicNodeConfig.renderer.removeStyle(this.element, styleName);\r\n    }\r\n\r\n    addOrRemoveAttribute(attributeName: string, value: any,isBlank:boolean) {\r\n        if (value || isBlank)\r\n            this.dynamicNodeConfig.renderer.setAttribute(this.element, attributeName, value);\r\n        else\r\n            this.dynamicNodeConfig.renderer.removeAttribute(this.element, attributeName);\r\n    }\r\n\r\n    private getClassNames(classes: any[]) {\r\n        let elementClasses = [];\r\n        if (classes)\r\n            classes.forEach(t => {\r\n                if (typeof t == STRING)\r\n                    elementClasses.push(t);\r\n                else if (typeof t == FUNCTION) {\r\n                    let elementClass = t.call(this.controlConfig);\r\n                    if (elementClass && !Array.isArray(elementClass))\r\n                        elementClasses.push(elementClass)\r\n                    else if (Array.isArray(elementClass))\r\n                        elementClass.forEach(x => elementClasses.push(x))\r\n                }\r\n            })\r\n        return elementClasses;\r\n    }\r\n}","import { ElementPropsAccessor } from './element-props-accessor';\r\nimport { DynamicNodeConfig } from \"../../models/interface/dynamic-node-config\";\r\n\r\nconst VALUE: string = \"value\";\r\nexport abstract class OverrideObjectProp extends ElementPropsAccessor {\r\n\r\n    \r\n\r\n    constructor(dynamicNodeConfig: DynamicNodeConfig) { super(dynamicNodeConfig); }\r\n\r\n    overrideValueProp() {\r\n        let descriptor = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(this.controlConfig), VALUE);\r\n        let value = this.controlConfig.value;\r\n        let oldValue = null;\r\n        Object.defineProperty(this.controlConfig, VALUE, {\r\n            get: () => { return descriptor ? descriptor.get.call(this.controlConfig) : value },\r\n            set: (v) => {\r\n                value = v;\r\n                if (this.controlConfig.formControl.value != v) {\r\n                    this.controlConfig.formControl.setValue(v);\r\n                    this.resetElementValue(v)\r\n                    this.controlConfig.value = v\r\n                } else {\r\n                    this.controlConfig.notifyValueChanged(VALUE, v, oldValue);\r\n                    if (descriptor)\r\n                        descriptor.set.call(this.controlConfig, v);\r\n                    this.controlConfig.refresh();\r\n                }\r\n                this.controlConfig.config.value = v;\r\n                oldValue = v;\r\n            }\r\n        })\r\n        this.overrideFormControlProp();\r\n        if (this.controlConfig.formControl.value)\r\n            setTimeout(() => { this.resetElementValue(this.controlConfig.formControl.value); }, 50)\r\n    }\r\n\r\n    private overrideFormControlProp() {\r\n        let value = this.controlConfig.formControl.value;\r\n        Object.defineProperty(this.controlConfig.formControl, VALUE, {\r\n            get: () => { return value },\r\n            set: (v) => {\r\n                value = v;\r\n                var t = setTimeout(() => {\r\n                    if (value != this.controlConfig.value) {\r\n                        this.controlConfig.value = value;\r\n                        this.resetElementValue(value);\r\n                    }\r\n                }, 50)\r\n            }\r\n        })\r\n    }\r\n}","import { SOURCE, SELECT, ADDITIONAL_CLASS, PROP, ATTR, EVENTS, INPUT, TEXTAREA, READONLY } from '../../const/app.const';\r\nimport { ControlState } from '../../statics/control-state';\r\nimport { OverrideObjectProp } from \"./override-object-prop\";\r\nimport { DynamicNodeConfig } from \"../../models/interface/dynamic-node-config\";\r\n\r\nexport class DomManipulation extends OverrideObjectProp {\r\n    isComponentView: boolean = false;\r\n    subscribers: string[] = [];\r\n    elementIndex: number = 0;\r\n    commentNode: any;\r\n    nodeName: string;\r\n    domConfig: { [key: string]: any };\r\n    element: any;\r\n    eventListeners: any[] = [];\r\n    controlId: number;\r\n    private actionListeners: { [key: string]: any } = {};\r\n    private elementClasses: any[] = [];\r\n\r\n    constructor(parentNode: any, elementName: string, dynamicNodeConfig: DynamicNodeConfig) {\r\n        super(dynamicNodeConfig);\r\n        this.nodeName = elementName;\r\n        super.createNodeElement(parentNode, elementName);\r\n        this.bindAdditionalClasses();\r\n        this.controlId = ControlState.controlId = ControlState.controlId + 1;\r\n        ControlState.controls[this.controlId] = this;\r\n        this.addOrRemoveAttribute(\"data-rxwebid\", this.controlId,false);\r\n    }\r\n\r\n    parseObject(jObject: { [key: string]: any }, isSubscribe: boolean) {\r\n        this.domConfig = jObject;\r\n        this.process(jObject, isSubscribe)\r\n        this.overrideProp(isSubscribe);\r\n        this.subscribeValueChange();\r\n    }\r\n\r\n    private subscribeValueChange() {\r\n        if (Object.keys(this.subscribeProps).length > 0)\r\n            this.controlConfig.onPropValueChanged(this.controlId, this.subscribeProps, (x, y) => {\r\n                this.process(x, false)\r\n            })\r\n    }\r\n    process(jObject: { [key: string]: any }, isSubscribe: boolean) {\r\n        Object.keys(jObject).forEach(propName => {\r\n            switch (propName) {\r\n                case PROP:\r\n                    this.bindProp(jObject[propName], isSubscribe);\r\n                    break;\r\n                case ATTR:\r\n                    this.bindAttribute(jObject[propName], isSubscribe);\r\n                    break;\r\n                case EVENTS:\r\n                    this.bindEvents(jObject[propName], isSubscribe);\r\n                    break;\r\n                case SOURCE:\r\n                    if (!isSubscribe) {\r\n                        while (this.element.firstElementChild)\r\n                            this.removeChildren(this.element.firstElementChild);\r\n                        this.dynamicNodeConfig.controlConfigProcessor.createChildrens(this.dynamicNodeConfig.collections, this, this.controlConfig, this.dynamicNodeConfig.additionalClasses, false);\r\n                    } else\r\n                        this.setPropSubscription(SOURCE, SOURCE, SOURCE);\r\n                    break;\r\n            }\r\n        })\r\n    }\r\n    overrideProp(isSubscribe: boolean) {\r\n        switch (this.nodeName) {\r\n            case INPUT:\r\n            case SELECT:\r\n            case TEXTAREA:\r\n                if (this.domConfig.overrideProp == undefined || this.domConfig.overrideProp)\r\n                    this.overrideValueProp();\r\n                this.setPropSubscription(READONLY, ATTR, ADDITIONAL_CLASS, ADDITIONAL_CLASS)\r\n                if (this.controlConfig && this.controlConfig.config && this.controlConfig.config.additionalConfig) \r\n                    this.process(this.controlConfig.config.additionalConfig, isSubscribe);\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    bindAdditionalClasses() {\r\n        let additionalClasses = this.dynamicNodeConfig.additionalClasses;\r\n        if (additionalClasses && additionalClasses.class) {\r\n            this.setClass(additionalClasses.class, ADDITIONAL_CLASS);\r\n            if (additionalClasses.listenerProps)\r\n                additionalClasses.listenerProps.forEach(t => this.setPropSubscription(t, ATTR, ADDITIONAL_CLASS, ADDITIONAL_CLASS))\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        let eventCount = this.eventListeners.length;\r\n        for (var i = 0; i < eventCount; i++) {\r\n            this.eventListeners[0]();\r\n            this.eventListeners.splice(0, 1);\r\n        }\r\n        this.eventListeners = [];\r\n        this.element.onClick = null;\r\n        if (this.componentView)\r\n            this.componentView.destroy();\r\n        else\r\n            this.element.parentElement.removeChild(this.element)\r\n        this.controlConfig.destroy(this.controlId);\r\n    }\r\n}\r\n\r\n","import { Input, ComponentFactoryResolver, ViewContainerRef } from \"@angular/core\";\r\nimport { FormControlConfig, ControlConfig } from \"../services/form-control-config\"\r\nimport { DynamicFormBuildConfig } from \"../models/interface/dynamic-form-build-config\";\r\nimport { DYNAMIC_ELEMENT_DESIGN_TREE } from '../const/dynamic-element-design-tree.const';\r\nimport { BOOTSTRAP_DESIGN_CONFIG } from '../const/bootstrap-design-config.const';\r\nimport { DomManipulation } from '../domain/dom/dom-manipulation'\r\nimport { ApplicationUtil } from '../util/application-util';\r\nimport { objectPropValue } from '../functions/object-prop-value.function';\r\n\r\nimport { INLINE,PREPEND_BOTH, PREPEND_LEFT, PREPEND_RIGHT, INPUT_TEXT,SQUARE_ERROR, SQUARE_SMALL, SQUARE_LABEL,SQUARE_CONTROL,ADVANCE, INPUT, TEXT, RANGE, FILE, STRING, CONTROL } from '../const/app.const';\r\nimport { DynamicNodeConfig } from \"../models/interface/dynamic-node-config\";\r\n\r\nexport class ControlConfigProcessor {\r\n    isBuild: boolean = false;\r\n    _viewMode: any;\r\n    @Input('rxwebDynamicForm') dynamicFormBuildConfig: DynamicFormBuildConfig;\r\n\r\n    @Input() set viewMode(value: string) {\r\n        this._viewMode = value;\r\n        if (this.isBuild)\r\n            this.build();\r\n    }\r\n\r\n    get viewMode(): string {\r\n        return this._viewMode;\r\n    }\r\n\r\n    get currentViewMode(): any {\r\n        return DYNAMIC_ELEMENT_DESIGN_TREE.viewMode[this.viewMode];\r\n    }\r\n\r\n    getView(name: string, controlConfig: FormControlConfig) {\r\n        if (this.viewMode == INLINE)\r\n            name = this.getName(name,controlConfig,true);\r\n        return DYNAMIC_ELEMENT_DESIGN_TREE[name];\r\n    }\r\n\r\n    get viewClassPath(): any {\r\n        return BOOTSTRAP_DESIGN_CONFIG.elementClassPath.viewMode[this.viewMode];\r\n    }\r\n\r\n    @Input() uiBindings: any[];\r\n\r\n    constructor(protected element: Node, private renderer, private componentFactoryResolver: ComponentFactoryResolver, private viewContainerRef: ViewContainerRef) { }\r\n\r\n\r\n    build() {\r\n        this.uiBindings.forEach(controlConfigName => {\r\n            this.designForm(controlConfigName, this.element, this.currentViewMode[0], this.currentViewMode[1], BOOTSTRAP_DESIGN_CONFIG.elementClassPath.viewMode[this.viewMode]);\r\n        })\r\n    }\r\n\r\n    designForm(controlConfigName, element, viewRoot, viewChild, classPath: any, childrenControlConfig?: FormControlConfig) {\r\n        let controlConfig = childrenControlConfig || this.getControlConfig(controlConfigName);\r\n        if (controlConfig) {\r\n            if (this.viewMode != INLINE && controlConfig && !controlConfig.config.skipDefaultView)\r\n                this.createElement(viewRoot, viewChild, element, controlConfig, classPath);\r\n            else {\r\n                let currentView = this.getView(controlConfig.config.type, controlConfig);\r\n                if (currentView)\r\n                    this.createElement(currentView[0], currentView[1], element, controlConfig, this.getClassPath(controlConfig.config.type, controlConfig, this._viewMode == INLINE));\r\n                else\r\n                    this.createDomManipulation(controlConfig.config.type, [], element, controlConfig, [], true)\r\n            }\r\n        } else if (this.viewMode == ADVANCE && Array.isArray(controlConfigName)) {\r\n            let config: any = new ControlConfig({ }, {});\r\n            let domManipulation = this.createElement(this.currentViewMode[0], [], element, config, BOOTSTRAP_DESIGN_CONFIG.elementClassPath.viewMode[this.viewMode])\r\n            controlConfigName.forEach(t => {\r\n                this.designForm(t, domManipulation.element, this.currentViewMode[1][0], this.currentViewMode[1][1], BOOTSTRAP_DESIGN_CONFIG.elementClassPath.viewMode[this.viewMode].child[\"0\"])\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    createElement(elementName: string, collections: any[], parentElement: any, controlConfig: FormControlConfig, elementClassPath: any) {\r\n        if (!elementName.startsWith(\"#\")) {\r\n            elementClassPath = elementClassPath ? elementClassPath : {};\r\n            let domManipulation = this.createDomManipulation(elementName, collections, parentElement, controlConfig, elementClassPath);\r\n            this.createChildrens(collections, domManipulation, controlConfig, elementClassPath)\r\n            if (controlConfig.config && controlConfig.config.childrens && controlConfig.config.childrens.length > 0) {\r\n                controlConfig.config.childrens.forEach((t, i) => {\r\n                    let childrenControlConfig = undefined;\r\n                    if (!(typeof t == STRING) && !Array.isArray(t))\r\n                        childrenControlConfig = new ControlConfig({ ...t, ...{ skipDefaultView: true } }, {});\r\n                    this.designForm(t, domManipulation.element, this.currentViewMode[0], this.currentViewMode[1], BOOTSTRAP_DESIGN_CONFIG.elementClassPath.viewMode[this.viewMode], childrenControlConfig);\r\n                })\r\n            }\r\n            return domManipulation;\r\n        } else\r\n            this.createDomManipulation(elementName, collections, parentElement, controlConfig, elementClassPath,true);//this.createComponentView(controlConfig, parentElement);\r\n    }\r\n\r\n    private createDomManipulation(elementName: string, collections: any[], parentElement: any, controlConfig: FormControlConfig, elementClassPath: any, isComponentView: boolean = false) {\r\n        let dynamicNodeConfig: DynamicNodeConfig = {\r\n            controlConfig: controlConfig, additionalClasses: elementClassPath, renderer: this.renderer, collections: collections, controlConfigProcessor: this,\r\n            viewContainerRef: isComponentView ? this.viewContainerRef : undefined,\r\n            componentFactoryResolver: isComponentView ? this.componentFactoryResolver : undefined,\r\n            dynamicFormBuildConfig: this.dynamicFormBuildConfig\r\n        }\r\n        return new DomManipulation(parentElement, elementName, dynamicNodeConfig);\r\n    }\r\n\r\n    createChildrens(collections, domManipulation, controlConfig, elementClassPath,isSubscribe:boolean = true) {\r\n        let elementCount = 0;\r\n        let childElementsClassConfig = elementClassPath.child ? elementClassPath.child : {};\r\n        for (var i = 0; i < collections.length; i++) {\r\n            let collection = collections[i];\r\n            if (!ApplicationUtil.isObject(collection)) {\r\n                if (this.isCreateElement(collections[i], controlConfig)) {\r\n                    if (collection == SQUARE_CONTROL && controlConfig.config.type == undefined && controlConfig.config.childControlConfigs) {\r\n                        controlConfig.config.childControlConfigs.forEach(x => {\r\n                            let childControlConfig = this.getControlConfig(x);\r\n                            this.createChildNodes(collections, childControlConfig, childElementsClassConfig, elementCount, i, domManipulation);\r\n                        })\r\n                    } else {\r\n                        if (collection == SQUARE_CONTROL && controlConfig.config.type.startsWith(\"#\"))\r\n                            this.createDomManipulation(controlConfig.config.type, [], domManipulation.element, controlConfig,[],true)\r\n                        else {\r\n                            let isIncrease = this.createChildNodes(collections, controlConfig, childElementsClassConfig, elementCount, i, domManipulation);\r\n                            if (isIncrease)\r\n                                i = i + 1;\r\n                        }\r\n                    }\r\n                }\r\n                elementCount++;\r\n            } else {\r\n                if (collection.for)\r\n                    this.runForCollection(collection, domManipulation, controlConfig, elementClassPath);\r\n                if (isSubscribe)\r\n                domManipulation.parseObject(collections[i], isSubscribe);\r\n            }\r\n        }\r\n    }\r\n\r\n    private createChildNodes(collections, controlConfig, childElementsClassConfig, elementCount, i, domManipulation) {\r\n        let isNextCollection: boolean = false;\r\n        let nextCollection = this.getCollection(collections[i], controlConfig);\r\n        let childClasses = this.getAdditionalClasses(collections[i], childElementsClassConfig, elementCount, controlConfig);\r\n        if (!nextCollection) {\r\n            nextCollection = [collections[i], collections[i + 1]];\r\n            isNextCollection = true;\r\n        }\r\n        this.createElement(nextCollection[0], nextCollection[1], domManipulation.element, controlConfig, childClasses);\r\n        return isNextCollection;\r\n    }\r\n    private runForCollection(collection: any, domManipulation, controlConfig, elementClassPath) {\r\n        Object.keys(collection.for).forEach(t => {\r\n            let source = objectPropValue(t, controlConfig);\r\n            source.forEach((x, index) => {\r\n                let item = collection.for[t].call(controlConfig, x, index);\r\n                this.createChildrens(item, domManipulation, controlConfig, elementClassPath);\r\n            })\r\n\r\n        })\r\n    }\r\n\r\n    private getAdditionalClasses(name: string, childClasses: { [key: string]: any }, index: number, controlConfig: FormControlConfig) {\r\n        name = this.getName(name, controlConfig)\r\n        let additionalClasses = BOOTSTRAP_DESIGN_CONFIG.elementClassPath[name];\r\n        let childrenClasses = childClasses[index] ? childClasses[index] : {\r\n            class: []\r\n        };\r\n        if (additionalClasses) {\r\n            if (childrenClasses.class)\r\n                additionalClasses = { class: additionalClasses.class.concat(childrenClasses.class), listenerProps: additionalClasses.listenerProps, child: additionalClasses.child }\r\n            return additionalClasses\r\n        }\r\n\r\n        return childrenClasses;\r\n    }\r\n\r\n    private getCollection(name: string,controlConfig: FormControlConfig) {\r\n        if (name[0] == \"[\") {\r\n            name = this.getName(name, controlConfig);\r\n            return DYNAMIC_ELEMENT_DESIGN_TREE[name];\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    private getControlName(name: string) {\r\n        let controlName: string = '';\r\n        switch (name) {\r\n            case \"number\":\r\n            case \"color\":\r\n            case \"date\":\r\n            case \"email\":\r\n            case \"password\":\r\n            case \"tel\":\r\n            case \"time\":\r\n            case \"url\":\r\n            case \"color\":\r\n            case RANGE:\r\n            case FILE:\r\n            case TEXT:\r\n                controlName = INPUT;\r\n                break;\r\n            default:\r\n                controlName = name;\r\n\r\n        }\r\n        return controlName;\r\n    }\r\n\r\n    private getControlConfig(name: string) {\r\n        return this.dynamicFormBuildConfig.controlsConfig[name];\r\n    }\r\n\r\n    private getName(name: string, controlConfig: FormControlConfig,isInline:boolean = false) {\r\n        name = name.replace(new RegExp(/\\[/g), '').replace(new RegExp(/\\]/g), '');\r\n        name = (name == CONTROL || isInline) ? this.getControlName(controlConfig.config.type) : name;\r\n        switch (name) {\r\n            case INPUT:\r\n                name = this.prependControl(name,controlConfig);\r\n                break;\r\n            case INPUT_TEXT:\r\n                name = INPUT;\r\n                break;\r\n        }\r\n        return name;\r\n    }\r\n\r\n    private prependControl(name: string, controlConfig: FormControlConfig) {\r\n        if (controlConfig.config.ui && controlConfig.config.ui.prependText && controlConfig.config.ui.prependText.right && controlConfig.config.ui.prependText.left)\r\n            name = PREPEND_BOTH;\r\n        else if (name == INPUT && controlConfig.config.ui && controlConfig.config.ui.prependText && controlConfig.config.ui.prependText.left)\r\n            name = PREPEND_LEFT;\r\n        else if (name == INPUT && controlConfig.config.ui && controlConfig.config.ui.prependText && controlConfig.config.ui.prependText.right)\r\n            name = PREPEND_RIGHT;\r\n        return name;\r\n    }\r\n\r\n    private isCreateElement(collection: any, controlConfig: FormControlConfig) {\r\n        let isCreate = true;\r\n        switch (collection) {\r\n            case \"[img]\":\r\n                isCreate = controlConfig.img != undefined;\r\n            case SQUARE_LABEL:\r\n                isCreate = controlConfig.label != undefined;\r\n                break;\r\n            case SQUARE_SMALL:\r\n                isCreate = controlConfig.description != undefined;\r\n                break;\r\n            case SQUARE_ERROR:\r\n                isCreate = controlConfig.formControl != undefined && (controlConfig.formControl.validator != undefined || controlConfig.formControl.asyncValidator != undefined) ;\r\n                break;\r\n        }\r\n        return isCreate;\r\n    }\r\n\r\n    private getClassPath(name: string,controlConfig:FormControlConfig,isInline:boolean) {\r\n        if (this.viewMode == INLINE)\r\n            name = this.getName(name,controlConfig,isInline);\r\n        return BOOTSTRAP_DESIGN_CONFIG.elementClassPath[name];\r\n    }\r\n}","import { Renderer2, ElementRef, OnInit, Directive, OnDestroy, ComponentFactoryResolver, ViewContainerRef } from '@angular/core'\r\nimport { ControlConfigProcessor } from '../form-designer/control-config-processor';\r\nimport { ControlState } from '../statics/control-state';\r\n\r\n@Directive({\r\n    selector: '[rxwebDynamicForm]'\r\n})\r\nexport class RxDynamicFormDirective extends ControlConfigProcessor implements OnInit, OnDestroy {\r\n\r\n\r\n    constructor(elementRef: ElementRef, renderer: Renderer2, componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef) {\r\n        super(elementRef.nativeElement as Node, renderer, componentFactoryResolver, viewContainerRef);\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n        this.build();\r\n    }\r\n\r\n    removeChildren(element: any) {\r\n        while (element.firstElementChild)\r\n            this.removeChildren(element.firstElementChild);\r\n\r\n        let controlId = element.getAttribute(\"data-rxwebid\");\r\n        if (controlId && ControlState.controls[controlId]) {\r\n            ControlState.controls[controlId].destroy();\r\n            delete ControlState.controls[controlId];\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.element)\r\n            this.removeChildren(this.element);\r\n\r\n    }\r\n}","import { NgModule, ModuleWithProviders } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\"\r\nimport { RxDynamicFormDirective } from '../directives/rxweb-bootstrap-form.directive'\r\nimport { RxDynamicFormBuilder } from \"../services/dynamic-form-builder\"\r\n@NgModule({\r\n    declarations: [RxDynamicFormDirective],\r\n    imports: [CommonModule],\r\n    providers: [RxDynamicFormBuilder],\r\n    exports: [RxDynamicFormDirective]\r\n})\r\nexport class RxReactiveDynamicFormsModule {\r\n    static forRoot(): ModuleWithProviders { return { ngModule: RxReactiveDynamicFormsModule, providers: [] }; }\r\n}\r\n","import { dynamicContainer } from '../core/dynamicContainer';\r\n\r\nexport function dynamicComponent(name:string) {\r\n    return function (\r\n        target: Object\r\n    ) {\r\n        dynamicContainer.registerComponent(name, target)\r\n    } \r\n}\r\n\r\n","import { dynamicContainer } from '../core/dynamicContainer';\r\nimport { OverrideConfigProp } from \"../models/interface/override-config-prop\"\r\n\r\nexport function overrideProps(props:{[key:string]:OverrideConfigProp}) {\r\n    return function (\r\n        target: Object\r\n    ) {\r\n        dynamicContainer.registerOverrideProp(props)\r\n    } \r\n}\r\n\r\n","import { FormControlConfig } from \"../services/form-control-config\";\r\nimport { DynamicFormBuildConfig } from \"./interface/dynamic-form-build-config\";\r\nimport { Input } from \"@angular/core\";\r\n\r\nexport abstract class AbstractControlConfig {\r\n    private _controlConfig: FormControlConfig;\r\n    private _dynamicFormBuildConfig: DynamicFormBuildConfig;\r\n\r\n    @Input() set controlConfig(value: FormControlConfig) {\r\n        this._controlConfig = value;\r\n    }\r\n    get controlConfig() {\r\n        return this._controlConfig;\r\n    }\r\n    @Input() set dynamicFormBuildConfig(value: DynamicFormBuildConfig) {\r\n        this._dynamicFormBuildConfig = value;\r\n    }\r\n\r\n    get dynamicFormBuildConfig() {\r\n        return this._dynamicFormBuildConfig;\r\n    }\r\n\r\n    addItem() {\r\n        this.dynamicFormBuildConfig.controlsConfig[this.controlConfig.config.controlConfigName][\"addItem\"]();\r\n    }\r\n\r\n    removeItem(index: number) {\r\n        this.dynamicFormBuildConfig.controlsConfig[this.controlConfig.config.controlConfigName][\"removeItem\"](index);\r\n    }\r\n}"],"names":["FUNCTION","FILTER","tslib_1.__decorate"],"mappings":"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"}