export const dynamicContainer = new (class {
    constructor() {
        this.components = [];
        this.overrideProps = {};
    }
    registerComponent(name, target) {
        let componentContainer = this.components.filter(component => component.instance == target)[0];
        if (!componentContainer)
            this.components.push({ instance: target, name: name });
    }
    registerOverrideProp(props) {
        if (props)
            Object.keys(props).forEach(t => this.overrideProps[t] = props[t]);
    }
    getOverrideProp(name) {
        return this.overrideProps[name];
    }
    getComponent(name) {
        return this.components.filter(component => component.name == name)[0];
    }
})();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pY0NvbnRhaW5lci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0ByeHdlYi9yZWFjdGl2ZS1keW5hbWljLWZvcm1zLyIsInNvdXJjZXMiOlsiY29yZS9keW5hbWljQ29udGFpbmVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQU1yQixJQUFJLENBQUM7SUFBQTtRQUNHLGVBQVUsR0FBMkMsRUFBRSxDQUFDO1FBQ3hELGtCQUFhLEdBQU8sRUFBRSxDQUFDO0lBb0J2QyxDQUFDO0lBbkJPLGlCQUFpQixDQUFDLElBQVcsRUFBQyxNQUFXO1FBQ3JDLElBQUksa0JBQWtCLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUMsUUFBUSxJQUFJLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBO1FBQzdGLElBQUksQ0FBQyxrQkFBa0I7WUFDbkIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUMsQ0FBQyxDQUFDO0lBQzlELENBQUM7SUFFRCxvQkFBb0IsQ0FBQyxLQUF1QztRQUN4RCxJQUFHLEtBQUs7WUFDSixNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUEsRUFBRSxDQUFBLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDeEUsQ0FBQztJQUVELGVBQWUsQ0FBQyxJQUFXO1FBQ3ZCLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNwQyxDQUFDO0lBRUQsWUFBWSxDQUFDLElBQVk7UUFDckIsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxJQUFJLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUE7SUFDekUsQ0FBQztDQUVSLENBQUMsRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT3ZlcnJpZGVDb25maWdQcm9wIH0gZnJvbSBcIi4uL21vZGVscy9pbnRlcmZhY2Uvb3ZlcnJpZGUtY29uZmlnLXByb3BcIjtcclxuXHJcbmV4cG9ydCBjb25zdCBkeW5hbWljQ29udGFpbmVyOlxyXG4gICAge1xyXG4gICAgICAgIHJlZ2lzdGVyQ29tcG9uZW50KG5hbWU6IHN0cmluZywgdGFyZ2V0OiBhbnkpOiB2b2lkLFxyXG4gICAgICAgIHJlZ2lzdGVyT3ZlcnJpZGVQcm9wKHByb3BzOntba2V5OnN0cmluZ106T3ZlcnJpZGVDb25maWdQcm9wfSksXHJcbiAgICAgICAgZ2V0T3ZlcnJpZGVQcm9wKG5hbWU6c3RyaW5nKTpPdmVycmlkZUNvbmZpZ1Byb3BcclxuICAgICAgICBnZXRDb21wb25lbnQobmFtZTogc3RyaW5nKTogeyBuYW1lOiBzdHJpbmcsIGluc3RhbmNlOiBhbnkgfTtcclxuICAgIH0gPSBuZXcgKGNsYXNzIHtcclxuICAgICAgICBwcml2YXRlIGNvbXBvbmVudHM6IEFycmF5PHsgbmFtZTogc3RyaW5nLCBpbnN0YW5jZTogYW55fT4gID0gW107XHJcbiAgICAgICAgcHJpdmF0ZSBvdmVycmlkZVByb3BzOmFueSA9IHt9O1xyXG4gICAgICAgIHJlZ2lzdGVyQ29tcG9uZW50KG5hbWU6c3RyaW5nLHRhcmdldDogYW55KTp2b2lkIHtcclxuICAgICAgICAgICAgbGV0IGNvbXBvbmVudENvbnRhaW5lciA9IHRoaXMuY29tcG9uZW50cy5maWx0ZXIoY29tcG9uZW50ID0+IGNvbXBvbmVudC5pbnN0YW5jZSA9PSB0YXJnZXQpWzBdXHJcbiAgICAgICAgICAgIGlmICghY29tcG9uZW50Q29udGFpbmVyKVxyXG4gICAgICAgICAgICAgICAgdGhpcy5jb21wb25lbnRzLnB1c2goeyBpbnN0YW5jZTogdGFyZ2V0LCBuYW1lOiBuYW1lfSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZWdpc3Rlck92ZXJyaWRlUHJvcChwcm9wczp7W2tleTpzdHJpbmddOk92ZXJyaWRlQ29uZmlnUHJvcH0pe1xyXG4gICAgICAgICAgICBpZihwcm9wcylcclxuICAgICAgICAgICAgICAgIE9iamVjdC5rZXlzKHByb3BzKS5mb3JFYWNoKHQ9PnRoaXMub3ZlcnJpZGVQcm9wc1t0XSA9IHByb3BzW3RdKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGdldE92ZXJyaWRlUHJvcChuYW1lOnN0cmluZyk6T3ZlcnJpZGVDb25maWdQcm9we1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5vdmVycmlkZVByb3BzW25hbWVdO1xyXG4gICAgICAgIH0gICAgXHJcblxyXG4gICAgICAgIGdldENvbXBvbmVudChuYW1lOiBzdHJpbmcpOiB7IG5hbWU6IHN0cmluZywgaW5zdGFuY2U6IGFueSB9IHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuY29tcG9uZW50cy5maWx0ZXIoY29tcG9uZW50ID0+IGNvbXBvbmVudC5uYW1lID09IG5hbWUpWzBdXHJcbiAgICAgICAgfVxyXG5cclxufSkoKTtcclxuIl19