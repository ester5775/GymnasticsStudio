import { isNotMatched } from "../util/is-not-matched";
export class ValueChangeNotification {
    constructor() {
        this.attributeChangeSubscriptions = new Array();
    }
    onPropValueChanged(controlId, subscription, func) {
        this.attributeChangeSubscriptions.push({ controlId: controlId, names: subscription.names, props: subscription.props, func: func });
    }
    notifyValueChanged(name, value, oldValue, isProps = false) {
        if ((!isProps && this.isNotEqual(oldValue, value)) && this.onPropValueChanged) {
            let subscriptions = this.attributeChangeSubscriptions.filter(t => t.names.indexOf(name) != -1);
            subscriptions.forEach(subscribe => {
                if (subscribe.props && subscribe.props[name])
                    subscribe.func(subscribe.props[name]);
            });
        }
    }
    isNotEqual(leftValue, rightValue) {
        if (Array.isArray(leftValue) && Array.isArray(rightValue)) {
            let isNotEqual = leftValue.length != rightValue.length;
            if (!isNotEqual)
                for (var i = 0; i < leftValue.length; i++) {
                    isNotEqual = isNotMatched(leftValue[i], rightValue[i]);
                    if (isNotEqual)
                        break;
                }
            return isNotEqual;
        }
        return leftValue != rightValue;
    }
    destroy(controlId) {
        for (var i = 0; i < this.attributeChangeSubscriptions.length; i++) {
            if (this.attributeChangeSubscriptions[i].controlId == controlId) {
                this.attributeChangeSubscriptions.splice(i, 1);
                break;
            }
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmFsdWUtY2hhbmdlLW5vdGlmaWNhdGlvbi5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0ByeHdlYi9yZWFjdGl2ZS1keW5hbWljLWZvcm1zLyIsInNvdXJjZXMiOlsic2VydmljZXMvdmFsdWUtY2hhbmdlLW5vdGlmaWNhdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFFdEQsTUFBTSxPQUFPLHVCQUF1QjtJQUFwQztRQUNZLGlDQUE0QixHQUFlLElBQUksS0FBSyxFQUFPLENBQUM7SUF1Q3hFLENBQUM7SUFyQ0csa0JBQWtCLENBQUMsU0FBaUIsRUFBRSxZQUFvQyxFQUFFLElBQWM7UUFDdEYsSUFBSSxDQUFDLDRCQUE0QixDQUFDLElBQUksQ0FBQyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFlBQVksQ0FBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLFlBQVksQ0FBQyxLQUFLLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxDQUFDLENBQUM7SUFDdkksQ0FBQztJQUdELGtCQUFrQixDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFLFVBQW1CLEtBQUs7UUFDOUQsSUFBSSxDQUFDLENBQUMsT0FBTyxJQUFJLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxFQUFFLEtBQUssQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDLGtCQUFrQixFQUFFO1lBQzNFLElBQUksYUFBYSxHQUFHLElBQUksQ0FBQyw0QkFBNEIsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQy9GLGFBQWEsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLEVBQUU7Z0JBQzlCLElBQUksU0FBUyxDQUFDLEtBQUssSUFBSSxTQUFTLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQztvQkFDeEMsU0FBUyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUE7WUFDN0MsQ0FBQyxDQUFDLENBQUM7U0FDTjtJQUNMLENBQUM7SUFFTyxVQUFVLENBQUMsU0FBYyxFQUFFLFVBQWU7UUFDOUMsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLEVBQUU7WUFDdkQsSUFBSSxVQUFVLEdBQUcsU0FBUyxDQUFDLE1BQU0sSUFBSSxVQUFVLENBQUMsTUFBTSxDQUFDO1lBQ3ZELElBQUksQ0FBQyxVQUFVO2dCQUNYLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxTQUFTLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO29CQUN2QyxVQUFVLEdBQUcsWUFBWSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRSxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFDdkQsSUFBSSxVQUFVO3dCQUNWLE1BQU07aUJBQ2I7WUFDTCxPQUFPLFVBQVUsQ0FBQztTQUNyQjtRQUNELE9BQU8sU0FBUyxJQUFJLFVBQVUsQ0FBQztJQUNuQyxDQUFDO0lBRUQsT0FBTyxDQUFDLFNBQWlCO1FBQ3JCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsNEJBQTRCLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQy9ELElBQUksSUFBSSxDQUFDLDRCQUE0QixDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsSUFBSSxTQUFTLEVBQUU7Z0JBQzdELElBQUksQ0FBQyw0QkFBNEIsQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO2dCQUMvQyxNQUFNO2FBQ1Q7U0FDSjtJQUNMLENBQUM7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzTm90TWF0Y2hlZCB9IGZyb20gXCIuLi91dGlsL2lzLW5vdC1tYXRjaGVkXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgVmFsdWVDaGFuZ2VOb3RpZmljYXRpb24ge1xyXG4gICAgcHJpdmF0ZSBhdHRyaWJ1dGVDaGFuZ2VTdWJzY3JpcHRpb25zOiBBcnJheTxhbnk+ID0gbmV3IEFycmF5PGFueT4oKTtcclxuXHJcbiAgICBvblByb3BWYWx1ZUNoYW5nZWQoY29udHJvbElkOiBudW1iZXIsIHN1YnNjcmlwdGlvbjogeyBba2V5OiBzdHJpbmddOiBhbnkgfSwgZnVuYzogRnVuY3Rpb24pIHtcclxuICAgICAgICB0aGlzLmF0dHJpYnV0ZUNoYW5nZVN1YnNjcmlwdGlvbnMucHVzaCh7IGNvbnRyb2xJZDogY29udHJvbElkLCBuYW1lczogc3Vic2NyaXB0aW9uLm5hbWVzLCBwcm9wczogc3Vic2NyaXB0aW9uLnByb3BzLCBmdW5jOiBmdW5jIH0pO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICBub3RpZnlWYWx1ZUNoYW5nZWQobmFtZSwgdmFsdWUsIG9sZFZhbHVlLCBpc1Byb3BzOiBib29sZWFuID0gZmFsc2UpIHtcclxuICAgICAgICBpZiAoKCFpc1Byb3BzICYmIHRoaXMuaXNOb3RFcXVhbChvbGRWYWx1ZSwgdmFsdWUpKSAmJiB0aGlzLm9uUHJvcFZhbHVlQ2hhbmdlZCkge1xyXG4gICAgICAgICAgICBsZXQgc3Vic2NyaXB0aW9ucyA9IHRoaXMuYXR0cmlidXRlQ2hhbmdlU3Vic2NyaXB0aW9ucy5maWx0ZXIodCA9PiB0Lm5hbWVzLmluZGV4T2YobmFtZSkgIT0gLTEpO1xyXG4gICAgICAgICAgICBzdWJzY3JpcHRpb25zLmZvckVhY2goc3Vic2NyaWJlID0+IHtcclxuICAgICAgICAgICAgICAgIGlmIChzdWJzY3JpYmUucHJvcHMgJiYgc3Vic2NyaWJlLnByb3BzW25hbWVdKVxyXG4gICAgICAgICAgICAgICAgICAgIHN1YnNjcmliZS5mdW5jKHN1YnNjcmliZS5wcm9wc1tuYW1lXSlcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgaXNOb3RFcXVhbChsZWZ0VmFsdWU6IGFueSwgcmlnaHRWYWx1ZTogYW55KSB7XHJcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkobGVmdFZhbHVlKSAmJiBBcnJheS5pc0FycmF5KHJpZ2h0VmFsdWUpKSB7XHJcbiAgICAgICAgICAgIGxldCBpc05vdEVxdWFsID0gbGVmdFZhbHVlLmxlbmd0aCAhPSByaWdodFZhbHVlLmxlbmd0aDtcclxuICAgICAgICAgICAgaWYgKCFpc05vdEVxdWFsKVxyXG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZWZ0VmFsdWUubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgICAgICBpc05vdEVxdWFsID0gaXNOb3RNYXRjaGVkKGxlZnRWYWx1ZVtpXSwgcmlnaHRWYWx1ZVtpXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGlzTm90RXF1YWwpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gaXNOb3RFcXVhbDtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGxlZnRWYWx1ZSAhPSByaWdodFZhbHVlO1xyXG4gICAgfVxyXG5cclxuICAgIGRlc3Ryb3koY29udHJvbElkOiBudW1iZXIpIHtcclxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuYXR0cmlidXRlQ2hhbmdlU3Vic2NyaXB0aW9ucy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5hdHRyaWJ1dGVDaGFuZ2VTdWJzY3JpcHRpb25zW2ldLmNvbnRyb2xJZCA9PSBjb250cm9sSWQpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuYXR0cmlidXRlQ2hhbmdlU3Vic2NyaXB0aW9ucy5zcGxpY2UoaSwgMSk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufSJdfQ==